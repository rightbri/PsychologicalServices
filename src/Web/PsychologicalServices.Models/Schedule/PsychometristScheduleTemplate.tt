<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>

<#@ parameter type="PsychologicalServices.Models.Schedule.ScheduleModel" name="Model" #>

<!doctype html>
<html lang="en">
<head>
    <title></title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no" />
	<!--
	<link href="https://fonts.googleapis.com/css?family=Martel" rel="stylesheet">
	-->
    <style>
		body {
			font-family: 'Martel', Helvetica, sans-serif;
			
			font-size: 16px;
		}

		table {
			border-collapse: collapse;
			border-spacing: 0;
			width: 100%;
		}

		th {
			padding: 16px 12px;
			text-align: left;
			vertical-align: bottom;
			font-weight: normal;
			color: #999;
			text-transform: uppercase;
		}

		tr:not(:first-child) {
			border-top: 1px solid #e5e5e5;
		}

		.list-unstyled {
			list-style-type: none;
		}
	</style>
</head>
<body>
	<table>
		<thead>
			<tr>
				<th>Date</th>
				<th>Time</th>
				<th>Location</th>
				<th>Referral Source</th>
				<th>Claimant</th>
				<th>Info</th>
			</tr>
		</thead>
		<tbody>
	<# foreach (var appointment in Model.User.PsychometristAppointments) {
		var timezone = Model.TimezoneService.GetTimeZoneInfo(Model.DisplayTimezoneId);
		var time = Model.TimezoneService.ConvertFromUtc(appointment.AppointmentTime, timezone);
	#>
			<tr>
				<td><#= string.Format("{0:MMMM d, yyyy}", time) #></td>
				<td>
					<#= string.Format("{0:hh:mmtt}", time) #>
					<br><#= appointment.AppointmentStatus.Name #>
				</td>
				<td>
					<#= appointment.Location.Name #>
					<# if (!string.IsNullOrWhiteSpace(appointment.Location.Street)) { #>
					<br><#= appointment.Location.Street #>
					<# } #>
					<# if (!string.IsNullOrWhiteSpace(appointment.Location.Street)) { #>
					<br><#= appointment.Location.Suite #>
					<# } #>
					<# if (
						!string.IsNullOrWhiteSpace(appointment.Location.City.Name) ||
						!string.IsNullOrWhiteSpace(appointment.Location.City.Province) ||
						!string.IsNullOrWhiteSpace(appointment.Location.PostalCode)
					) { #>
					<br>
					<# if (!string.IsNullOrWhiteSpace(appointment.Location.City.Name)) { #>
						<#= appointment.Location.City.Name #>
					<# } #>
					<# if (!string.IsNullOrWhiteSpace(appointment.Location.City.Province)) { #>
						<#= appointment.Location.City.Province #>
					<# } #>
					<# if (!string.IsNullOrWhiteSpace(appointment.Location.PostalCode)) { #>
						<#= appointment.Location.PostalCode #>
					<# } #>
					<# } #>
				</td>
				<td><#= appointment.Assessment.ReferralSource.Name #></td>
				<td>
					<# foreach (var claim in appointment.Assessment.Claims) { #>
						<p>
						<#= claim.Claimant.FirstName #>
						&nbsp;<#= claim.Claimant.LastName #>
						&nbsp;&#45;
						&nbsp;<#= claim.Claimant.Age #>
						&nbsp;<#= claim.Claimant.Gender #>
						</p>
					<# } #>
				</td>
				<td>
					<ul class="list-unstyled">
						<# foreach (var attributeValue in appointment.Attributes.Where(attributeValue => new[] { 1 }.Contains(attributeValue.Attribute.AttributeType.AttributeTypeId))) { #>
							<li>
								<# if (null == attributeValue.Value || attributeValue.Value.Value) { #>
									<#= attributeValue.Attribute.Name #><# if (null == attributeValue.Value) { #><#= ": ?" #><# } #>
								<# } #>
							</li>
						<# } #>
						<# foreach (var attributeValue in appointment.Assessment.Attributes.Where(attributeValue => new[] { 5, 6 }.Contains(attributeValue.Attribute.AttributeType.AttributeTypeId))) { #>
							<li>
								<# if (null == attributeValue.Value || attributeValue.Value.Value) { #>
									<#= attributeValue.Attribute.Name #><# if (null == attributeValue.Value) { #><#= ": ?" #><# } #>
								<# } #>
							</li>
						<# } #>
					</ul>
				</td>
			</tr>
	<# } #>
		</tbody>
	</table>
</body>
</html>