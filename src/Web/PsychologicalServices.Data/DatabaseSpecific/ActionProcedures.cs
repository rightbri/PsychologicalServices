//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.3.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
// Templates version: 
//////////////////////////////////////////////////////////////
using System;
using System.Data;
using SD.LLBLGen.Pro.ORMSupportClasses;

namespace PsychologicalServices.Data.DatabaseSpecific
{
	/// <summary>Class which contains the static logic to execute action stored procedures in the database.</summary>
	public static partial class ActionProcedures
	{

		/// <summary>Delegate definition for stored procedure 'DeleteAssessment' to be used in combination of a UnitOfWork2 object.</summary>
		public delegate int DeleteAssessmentCallBack(System.Int32 assessmentId, IDataAccessCore dataAccessProvider);


		/// <summary>Calls stored procedure 'DeleteAssessment'.<br/><br/></summary>
		/// <param name="assessmentId">Input parameter. </param>
		/// <returns>Number of rows affected, if the database / routine doesn't suppress rowcounting.</returns>
		public static int DeleteAssessment(System.Int32 assessmentId)
		{
			using(DataAccessAdapter dataAccessProvider = new DataAccessAdapter())
			{
				return DeleteAssessment(assessmentId, dataAccessProvider);
			}
		}

		/// <summary>Calls stored procedure 'DeleteAssessment'.<br/><br/></summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="assessmentId">Input parameter. </param>
		/// <returns>Number of rows affected, if the database / routine doesn't suppress rowcounting.</returns>
		public static int DeleteAssessment(System.Int32 assessmentId, IDataAccessCore dataAccessProvider)
		{
			using(StoredProcedureCall call = CreateDeleteAssessmentCall(dataAccessProvider, assessmentId))
			{
				int toReturn = call.Call();
				return toReturn;
			}
		}
		
		/// <summary>Creates the call object for the call 'DeleteAssessment' to stored procedure 'DeleteAssessment'.</summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="assessmentId">Input parameter</param>
		/// <returns>Ready to use StoredProcedureCall object</returns>
		private static StoredProcedureCall CreateDeleteAssessmentCall(IDataAccessCore dataAccessProvider, System.Int32 assessmentId)
		{
			return new StoredProcedureCall(dataAccessProvider, @"[PsychologicalServices].[dbo].[DeleteAssessment]", "DeleteAssessment")
							.AddParameter("@AssessmentId", "Int", 0, ParameterDirection.Input, true, 10, 0, assessmentId);
		}


		#region Included Code

		#endregion
	}
}
