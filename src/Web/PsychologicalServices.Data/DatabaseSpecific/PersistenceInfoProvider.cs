//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro v5.3.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.Collections;
using System.Data;
using SD.LLBLGen.Pro.ORMSupportClasses;

namespace PsychologicalServices.Data.DatabaseSpecific
{
	/// <summary>Singleton implementation of the PersistenceInfoProvider. This class is the singleton wrapper through which the actual instance is retrieved.</summary>
	/// <remarks>It uses a single instance of an internal class. The access isn't marked with locks as the PersistenceInfoProviderBase class is threadsafe.</remarks>
	internal static class PersistenceInfoProviderSingleton
	{
		#region Class Member Declarations
		private static readonly IPersistenceInfoProvider _providerInstance = new PersistenceInfoProviderCore();
		#endregion

		/// <summary>Dummy static constructor to make sure threadsafe initialization is performed.</summary>
		static PersistenceInfoProviderSingleton()
		{
		}

		/// <summary>Gets the singleton instance of the PersistenceInfoProviderCore</summary>
		/// <returns>Instance of the PersistenceInfoProvider.</returns>
		public static IPersistenceInfoProvider GetInstance()
		{
			return _providerInstance;
		}
	}

	/// <summary>Actual implementation of the PersistenceInfoProvider. Used by singleton wrapper.</summary>
	internal class PersistenceInfoProviderCore : PersistenceInfoProviderBase
	{
		/// <summary>Initializes a new instance of the <see cref="PersistenceInfoProviderCore"/> class.</summary>
		internal PersistenceInfoProviderCore()
		{
			Init();
		}

		/// <summary>Method which initializes the internal datastores with the structure of hierarchical types.</summary>
		private void Init()
		{
			this.InitClass();
			InitAddressEntityMappings();
			InitAddressAddressTypeEntityMappings();
			InitAddressTypeEntityMappings();
			InitAppointmentEntityMappings();
			InitAppointmentAttributeEntityMappings();
			InitAppointmentSequenceEntityMappings();
			InitAppointmentStatusEntityMappings();
			InitAppointmentStatusInvoiceRateEntityMappings();
			InitArbitrationEntityMappings();
			InitArbitrationClaimEntityMappings();
			InitArbitrationStatusEntityMappings();
			InitAssessmentEntityMappings();
			InitAssessmentAttributeEntityMappings();
			InitAssessmentClaimEntityMappings();
			InitAssessmentColorEntityMappings();
			InitAssessmentMedRehabEntityMappings();
			InitAssessmentNoteEntityMappings();
			InitAssessmentReportEntityMappings();
			InitAssessmentReportIssueInDisputeEntityMappings();
			InitAssessmentTestingResultEntityMappings();
			InitAssessmentTypeEntityMappings();
			InitAssessmentTypeAttributeTypeEntityMappings();
			InitAssessmentTypeInvoiceAmountEntityMappings();
			InitAssessmentTypeReportTypeEntityMappings();
			InitAttributeEntityMappings();
			InitAttributeTypeEntityMappings();
			InitCalendarNoteEntityMappings();
			InitCityEntityMappings();
			InitClaimEntityMappings();
			InitClaimantEntityMappings();
			InitColorEntityMappings();
			InitCompanyEntityMappings();
			InitCompanyAttributeEntityMappings();
			InitConsultingAgreementEntityMappings();
			InitContactEntityMappings();
			InitContactTypeEntityMappings();
			InitCredibilityEntityMappings();
			InitDiagnosisFoundResponseEntityMappings();
			InitDocumentEntityMappings();
			InitEmployerEntityMappings();
			InitEmployerTypeEntityMappings();
			InitEventEntityMappings();
			InitGoseAccidentTimeframeEntityMappings();
			InitGoseFamilyAndFriendshipsDisruptionLevelEntityMappings();
			InitGoseInterviewEntityMappings();
			InitGoseRespondentTypeEntityMappings();
			InitGoseReturnToNormalLifeOutcomeFactorEntityMappings();
			InitGoseSocialAndLeisureRestrictionExtentEntityMappings();
			InitGoseWorkRestrictionLevelEntityMappings();
			InitInvoiceEntityMappings();
			InitInvoiceDocumentEntityMappings();
			InitInvoiceDocumentSendLogEntityMappings();
			InitInvoiceLineEntityMappings();
			InitInvoiceLineGroupEntityMappings();
			InitInvoiceLineGroupAppointmentEntityMappings();
			InitInvoiceLineGroupArbitrationEntityMappings();
			InitInvoiceLineGroupConsultingAgreementEntityMappings();
			InitInvoiceLineGroupRawTestDataEntityMappings();
			InitInvoiceStatusEntityMappings();
			InitInvoiceStatusChangeEntityMappings();
			InitInvoiceStatusPathsEntityMappings();
			InitInvoiceTypeEntityMappings();
			InitIssueInDisputeEntityMappings();
			InitIssueInDisputeInvoiceAmountEntityMappings();
			InitNoteEntityMappings();
			InitPhoneLogEntityMappings();
			InitPsychometristInvoiceAmountEntityMappings();
			InitRawTestDataEntityMappings();
			InitRawTestDataStatusEntityMappings();
			InitReferralSourceEntityMappings();
			InitReferralSourceInvoiceConfigurationEntityMappings();
			InitReferralSourceTypeEntityMappings();
			InitReferralTypeEntityMappings();
			InitReferralTypeIssueInDisputeEntityMappings();
			InitReportStatusEntityMappings();
			InitReportTypeEntityMappings();
			InitRightEntityMappings();
			InitRoleEntityMappings();
			InitRoleRightEntityMappings();
			InitUserEntityMappings();
			InitUserNoteEntityMappings();
			InitUserRoleEntityMappings();
			InitUserTravelFeeEntityMappings();
			InitUserUnavailabilityEntityMappings();
		}

		/// <summary>Inits AddressEntity's mappings</summary>
		private void InitAddressEntityMappings()
		{
			this.AddElementMapping("AddressEntity", @"PsychologicalServices", @"dbo", "Addresses", 7, 0);
			this.AddElementFieldMapping("AddressEntity", "AddressId", "AddressId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("AddressEntity", "Name", "Name", false, "NVarChar", 100, 0, 0, false, "", null, typeof(System.String), 1);
			this.AddElementFieldMapping("AddressEntity", "Street", "Street", false, "NVarChar", 100, 0, 0, false, "", null, typeof(System.String), 2);
			this.AddElementFieldMapping("AddressEntity", "Suite", "Suite", true, "NVarChar", 100, 0, 0, false, "", null, typeof(System.String), 3);
			this.AddElementFieldMapping("AddressEntity", "CityId", "CityId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 4);
			this.AddElementFieldMapping("AddressEntity", "PostalCode", "PostalCode", false, "NVarChar", 10, 0, 0, false, "", null, typeof(System.String), 5);
			this.AddElementFieldMapping("AddressEntity", "IsActive", "IsActive", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 6);
		}

		/// <summary>Inits AddressAddressTypeEntity's mappings</summary>
		private void InitAddressAddressTypeEntityMappings()
		{
			this.AddElementMapping("AddressAddressTypeEntity", @"PsychologicalServices", @"dbo", "AddressAddressTypes", 2, 0);
			this.AddElementFieldMapping("AddressAddressTypeEntity", "AddressId", "AddressId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("AddressAddressTypeEntity", "AddressTypeId", "AddressTypeId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 1);
		}

		/// <summary>Inits AddressTypeEntity's mappings</summary>
		private void InitAddressTypeEntityMappings()
		{
			this.AddElementMapping("AddressTypeEntity", @"PsychologicalServices", @"dbo", "AddressTypes", 3, 0);
			this.AddElementFieldMapping("AddressTypeEntity", "AddressTypeId", "AddressTypeId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("AddressTypeEntity", "Name", "Name", false, "NVarChar", 50, 0, 0, false, "", null, typeof(System.String), 1);
			this.AddElementFieldMapping("AddressTypeEntity", "IsActive", "IsActive", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 2);
		}

		/// <summary>Inits AppointmentEntity's mappings</summary>
		private void InitAppointmentEntityMappings()
		{
			this.AddElementMapping("AppointmentEntity", @"PsychologicalServices", @"dbo", "Appointments", 14, 0);
			this.AddElementFieldMapping("AppointmentEntity", "AppointmentId", "AppointmentId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("AppointmentEntity", "LocationId", "LocationId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 1);
			this.AddElementFieldMapping("AppointmentEntity", "AppointmentTime", "AppointmentTime", false, "DateTimeOffset", 0, 0, 0, false, "", null, typeof(System.DateTimeOffset), 2);
			this.AddElementFieldMapping("AppointmentEntity", "PsychometristId", "PsychometristId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 3);
			this.AddElementFieldMapping("AppointmentEntity", "PsychologistId", "PsychologistId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 4);
			this.AddElementFieldMapping("AppointmentEntity", "AppointmentStatusId", "AppointmentStatusId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 5);
			this.AddElementFieldMapping("AppointmentEntity", "AssessmentId", "AssessmentId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 6);
			this.AddElementFieldMapping("AppointmentEntity", "CreateDate", "CreateDate", false, "DateTimeOffset", 0, 0, 0, false, "", null, typeof(System.DateTimeOffset), 7);
			this.AddElementFieldMapping("AppointmentEntity", "CreateUserId", "CreateUserId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 8);
			this.AddElementFieldMapping("AppointmentEntity", "UpdateDate", "UpdateDate", false, "DateTimeOffset", 0, 0, 0, false, "", null, typeof(System.DateTimeOffset), 9);
			this.AddElementFieldMapping("AppointmentEntity", "UpdateUserId", "UpdateUserId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 10);
			this.AddElementFieldMapping("AppointmentEntity", "RoomRentalBillableAmount", "RoomRentalBillableAmount", true, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 11);
			this.AddElementFieldMapping("AppointmentEntity", "PsychologistInvoiceLock", "PsychologistInvoiceLock", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 12);
			this.AddElementFieldMapping("AppointmentEntity", "CancellationDate", "CancellationDate", true, "DateTimeOffset", 0, 0, 0, false, "", null, typeof(System.DateTimeOffset), 13);
		}

		/// <summary>Inits AppointmentAttributeEntity's mappings</summary>
		private void InitAppointmentAttributeEntityMappings()
		{
			this.AddElementMapping("AppointmentAttributeEntity", @"PsychologicalServices", @"dbo", "AppointmentAttributes", 3, 0);
			this.AddElementFieldMapping("AppointmentAttributeEntity", "AppointmentId", "AppointmentId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("AppointmentAttributeEntity", "AttributeId", "AttributeId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 1);
			this.AddElementFieldMapping("AppointmentAttributeEntity", "Value", "Value", true, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 2);
		}

		/// <summary>Inits AppointmentSequenceEntity's mappings</summary>
		private void InitAppointmentSequenceEntityMappings()
		{
			this.AddElementMapping("AppointmentSequenceEntity", @"PsychologicalServices", @"dbo", "AppointmentSequences", 3, 0);
			this.AddElementFieldMapping("AppointmentSequenceEntity", "AppointmentSequenceId", "AppointmentSequenceId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("AppointmentSequenceEntity", "Name", "Name", false, "NVarChar", 50, 0, 0, false, "", null, typeof(System.String), 1);
			this.AddElementFieldMapping("AppointmentSequenceEntity", "IsActive", "IsActive", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 2);
		}

		/// <summary>Inits AppointmentStatusEntity's mappings</summary>
		private void InitAppointmentStatusEntityMappings()
		{
			this.AddElementMapping("AppointmentStatusEntity", @"PsychologicalServices", @"dbo", "AppointmentStatuses", 10, 0);
			this.AddElementFieldMapping("AppointmentStatusEntity", "AppointmentStatusId", "AppointmentStatusId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("AppointmentStatusEntity", "Name", "Name", false, "NVarChar", 50, 0, 0, false, "", null, typeof(System.String), 1);
			this.AddElementFieldMapping("AppointmentStatusEntity", "Description", "Description", true, "NVarChar", 100, 0, 0, false, "", null, typeof(System.String), 2);
			this.AddElementFieldMapping("AppointmentStatusEntity", "IsActive", "IsActive", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 3);
			this.AddElementFieldMapping("AppointmentStatusEntity", "NotifyReferralSource", "NotifyReferralSource", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 4);
			this.AddElementFieldMapping("AppointmentStatusEntity", "CanInvoice", "CanInvoice", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 5);
			this.AddElementFieldMapping("AppointmentStatusEntity", "Sort", "Sort", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 6);
			this.AddElementFieldMapping("AppointmentStatusEntity", "ShowOnSchedule", "ShowOnSchedule", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 7);
			this.AddElementFieldMapping("AppointmentStatusEntity", "ClaimantSeen", "ClaimantSeen", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 8);
			this.AddElementFieldMapping("AppointmentStatusEntity", "IsFinalStatus", "IsFinalStatus", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 9);
		}

		/// <summary>Inits AppointmentStatusInvoiceRateEntity's mappings</summary>
		private void InitAppointmentStatusInvoiceRateEntityMappings()
		{
			this.AddElementMapping("AppointmentStatusInvoiceRateEntity", @"PsychologicalServices", @"dbo", "AppointmentStatusInvoiceRates", 10, 0);
			this.AddElementFieldMapping("AppointmentStatusInvoiceRateEntity", "CompanyId", "CompanyId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("AppointmentStatusInvoiceRateEntity", "ReferralSourceId", "ReferralSourceId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 1);
			this.AddElementFieldMapping("AppointmentStatusInvoiceRateEntity", "AppointmentStatusId", "AppointmentStatusId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 2);
			this.AddElementFieldMapping("AppointmentStatusInvoiceRateEntity", "AppointmentSequenceId", "AppointmentSequenceId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 3);
			this.AddElementFieldMapping("AppointmentStatusInvoiceRateEntity", "InvoiceRate", "InvoiceRate", false, "Decimal", 0, 3, 2, false, "", null, typeof(System.Decimal), 4);
			this.AddElementFieldMapping("AppointmentStatusInvoiceRateEntity", "ApplyCompletionFee", "ApplyCompletionFee", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 5);
			this.AddElementFieldMapping("AppointmentStatusInvoiceRateEntity", "ApplyLargeFileFee", "ApplyLargeFileFee", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 6);
			this.AddElementFieldMapping("AppointmentStatusInvoiceRateEntity", "ApplyTravelFee", "ApplyTravelFee", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 7);
			this.AddElementFieldMapping("AppointmentStatusInvoiceRateEntity", "ApplyIssueInDisputeFees", "ApplyIssueInDisputeFees", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 8);
			this.AddElementFieldMapping("AppointmentStatusInvoiceRateEntity", "ApplyExtraReportFees", "ApplyExtraReportFees", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 9);
		}

		/// <summary>Inits ArbitrationEntity's mappings</summary>
		private void InitArbitrationEntityMappings()
		{
			this.AddElementMapping("ArbitrationEntity", @"PsychologicalServices", @"dbo", "Arbitrations", 16, 0);
			this.AddElementFieldMapping("ArbitrationEntity", "ArbitrationId", "ArbitrationId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("ArbitrationEntity", "AssessmentId", "AssessmentId", true, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 1);
			this.AddElementFieldMapping("ArbitrationEntity", "StartDate", "StartDate", true, "DateTimeOffset", 0, 0, 0, false, "", null, typeof(System.DateTimeOffset), 2);
			this.AddElementFieldMapping("ArbitrationEntity", "EndDate", "EndDate", true, "DateTimeOffset", 0, 0, 0, false, "", null, typeof(System.DateTimeOffset), 3);
			this.AddElementFieldMapping("ArbitrationEntity", "AvailableDate", "AvailableDate", true, "DateTimeOffset", 0, 0, 0, false, "", null, typeof(System.DateTimeOffset), 4);
			this.AddElementFieldMapping("ArbitrationEntity", "DefenseLawyerId", "DefenseLawyerId", true, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 5);
			this.AddElementFieldMapping("ArbitrationEntity", "DefenseFileNumber", "DefenseFileNumber", true, "NVarChar", 50, 0, 0, false, "", null, typeof(System.String), 6);
			this.AddElementFieldMapping("ArbitrationEntity", "Title", "Title", false, "NVarChar", 250, 0, 0, false, "", null, typeof(System.String), 7);
			this.AddElementFieldMapping("ArbitrationEntity", "NoteId", "NoteId", true, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 8);
			this.AddElementFieldMapping("ArbitrationEntity", "NotifiedDate", "NotifiedDate", true, "DateTimeOffset", 0, 0, 0, false, "", null, typeof(System.DateTimeOffset), 9);
			this.AddElementFieldMapping("ArbitrationEntity", "LetterOfUnderstandingSentDate", "LetterOfUnderstandingSentDate", true, "DateTimeOffset", 0, 0, 0, false, "", null, typeof(System.DateTimeOffset), 10);
			this.AddElementFieldMapping("ArbitrationEntity", "PlaintiffLawyerId", "PlaintiffLawyerId", true, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 11);
			this.AddElementFieldMapping("ArbitrationEntity", "BillToContactId", "BillToContactId", true, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 12);
			this.AddElementFieldMapping("ArbitrationEntity", "PsychologistId", "PsychologistId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 13);
			this.AddElementFieldMapping("ArbitrationEntity", "ArbitrationStatusId", "ArbitrationStatusId", true, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 14);
			this.AddElementFieldMapping("ArbitrationEntity", "ClaimantId", "ClaimantId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 15);
		}

		/// <summary>Inits ArbitrationClaimEntity's mappings</summary>
		private void InitArbitrationClaimEntityMappings()
		{
			this.AddElementMapping("ArbitrationClaimEntity", @"PsychologicalServices", @"dbo", "ArbitrationClaims", 2, 0);
			this.AddElementFieldMapping("ArbitrationClaimEntity", "ArbitrationId", "ArbitrationId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("ArbitrationClaimEntity", "ClaimId", "ClaimId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 1);
		}

		/// <summary>Inits ArbitrationStatusEntity's mappings</summary>
		private void InitArbitrationStatusEntityMappings()
		{
			this.AddElementMapping("ArbitrationStatusEntity", @"PsychologicalServices", @"dbo", "ArbitrationStatuses", 5, 0);
			this.AddElementFieldMapping("ArbitrationStatusEntity", "ArbitrationStatusId", "ArbitrationStatusId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("ArbitrationStatusEntity", "Name", "Name", false, "NVarChar", 50, 0, 0, false, "", null, typeof(System.String), 1);
			this.AddElementFieldMapping("ArbitrationStatusEntity", "IsActive", "IsActive", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 2);
			this.AddElementFieldMapping("ArbitrationStatusEntity", "ShowOnCalendar", "ShowOnCalendar", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 3);
			this.AddElementFieldMapping("ArbitrationStatusEntity", "ShowOnSchedule", "ShowOnSchedule", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 4);
		}

		/// <summary>Inits AssessmentEntity's mappings</summary>
		private void InitAssessmentEntityMappings()
		{
			this.AddElementMapping("AssessmentEntity", @"PsychologicalServices", @"dbo", "Assessments", 25, 0);
			this.AddElementFieldMapping("AssessmentEntity", "AssessmentId", "AssessmentId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("AssessmentEntity", "ReferralTypeId", "ReferralTypeId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 1);
			this.AddElementFieldMapping("AssessmentEntity", "ReferralSourceId", "ReferralSourceId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 2);
			this.AddElementFieldMapping("AssessmentEntity", "AssessmentTypeId", "AssessmentTypeId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 3);
			this.AddElementFieldMapping("AssessmentEntity", "CompanyId", "CompanyId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 4);
			this.AddElementFieldMapping("AssessmentEntity", "ReportStatusId", "ReportStatusId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 5);
			this.AddElementFieldMapping("AssessmentEntity", "FileSize", "FileSize", true, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 6);
			this.AddElementFieldMapping("AssessmentEntity", "ReferralSourceContactEmail", "ReferralSourceContactEmail", true, "NVarChar", 4000, 0, 0, false, "", null, typeof(System.String), 7);
			this.AddElementFieldMapping("AssessmentEntity", "DocListWriterId", "DocListWriterId", true, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 8);
			this.AddElementFieldMapping("AssessmentEntity", "NotesWriterId", "NotesWriterId", true, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 9);
			this.AddElementFieldMapping("AssessmentEntity", "MedicalFileReceivedDate", "MedicalFileReceivedDate", true, "DateTimeOffset", 0, 0, 0, false, "", null, typeof(System.DateTimeOffset), 10);
			this.AddElementFieldMapping("AssessmentEntity", "IsLargeFile", "IsLargeFile", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 11);
			this.AddElementFieldMapping("AssessmentEntity", "ReferralSourceFileNumber", "ReferralSourceFileNumber", true, "NVarChar", 50, 0, 0, false, "", null, typeof(System.String), 12);
			this.AddElementFieldMapping("AssessmentEntity", "CreateDate", "CreateDate", false, "DateTimeOffset", 0, 0, 0, false, "", null, typeof(System.DateTimeOffset), 13);
			this.AddElementFieldMapping("AssessmentEntity", "CreateUserId", "CreateUserId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 14);
			this.AddElementFieldMapping("AssessmentEntity", "UpdateDate", "UpdateDate", false, "DateTimeOffset", 0, 0, 0, false, "", null, typeof(System.DateTimeOffset), 15);
			this.AddElementFieldMapping("AssessmentEntity", "UpdateUserId", "UpdateUserId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 16);
			this.AddElementFieldMapping("AssessmentEntity", "SummaryNoteId", "SummaryNoteId", true, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 17);
			this.AddElementFieldMapping("AssessmentEntity", "PsychologistFoundInFavorOfClaimant", "PsychologistFoundInFavorOfClaimant", true, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 18);
			this.AddElementFieldMapping("AssessmentEntity", "NeurocognitiveCredibilityId", "NeurocognitiveCredibilityId", true, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 19);
			this.AddElementFieldMapping("AssessmentEntity", "PsychologicalCredibilityId", "PsychologicalCredibilityId", true, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 20);
			this.AddElementFieldMapping("AssessmentEntity", "DiagnosisFoundReponseId", "DiagnosisFoundReponseId", true, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 21);
			this.AddElementFieldMapping("AssessmentEntity", "IsReassessment", "IsReassessment", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 22);
			this.AddElementFieldMapping("AssessmentEntity", "PreviouslySeenDate", "PreviouslySeenDate", true, "DateTimeOffset", 0, 0, 0, false, "", null, typeof(System.DateTimeOffset), 23);
			this.AddElementFieldMapping("AssessmentEntity", "ClaimantId", "ClaimantId", true, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 24);
		}

		/// <summary>Inits AssessmentAttributeEntity's mappings</summary>
		private void InitAssessmentAttributeEntityMappings()
		{
			this.AddElementMapping("AssessmentAttributeEntity", @"PsychologicalServices", @"dbo", "AssessmentAttributes", 3, 0);
			this.AddElementFieldMapping("AssessmentAttributeEntity", "AssessmentId", "AssessmentId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("AssessmentAttributeEntity", "AttributeId", "AttributeId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 1);
			this.AddElementFieldMapping("AssessmentAttributeEntity", "Value", "Value", true, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 2);
		}

		/// <summary>Inits AssessmentClaimEntity's mappings</summary>
		private void InitAssessmentClaimEntityMappings()
		{
			this.AddElementMapping("AssessmentClaimEntity", @"PsychologicalServices", @"dbo", "AssessmentClaims", 2, 0);
			this.AddElementFieldMapping("AssessmentClaimEntity", "AssessmentId", "AssessmentId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("AssessmentClaimEntity", "ClaimId", "ClaimId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 1);
		}

		/// <summary>Inits AssessmentColorEntity's mappings</summary>
		private void InitAssessmentColorEntityMappings()
		{
			this.AddElementMapping("AssessmentColorEntity", @"PsychologicalServices", @"dbo", "AssessmentColors", 2, 0);
			this.AddElementFieldMapping("AssessmentColorEntity", "AssessmentId", "AssessmentId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("AssessmentColorEntity", "ColorId", "ColorId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 1);
		}

		/// <summary>Inits AssessmentMedRehabEntity's mappings</summary>
		private void InitAssessmentMedRehabEntityMappings()
		{
			this.AddElementMapping("AssessmentMedRehabEntity", @"PsychologicalServices", @"dbo", "AssessmentMedRehabs", 6, 0);
			this.AddElementFieldMapping("AssessmentMedRehabEntity", "MedRehabId", "MedRehabId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("AssessmentMedRehabEntity", "AssessmentId", "AssessmentId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 1);
			this.AddElementFieldMapping("AssessmentMedRehabEntity", "Date", "Date", false, "DateTimeOffset", 0, 0, 0, false, "", null, typeof(System.DateTimeOffset), 2);
			this.AddElementFieldMapping("AssessmentMedRehabEntity", "Amount", "Amount", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 3);
			this.AddElementFieldMapping("AssessmentMedRehabEntity", "Description", "Description", false, "NVarChar", 100, 0, 0, false, "", null, typeof(System.String), 4);
			this.AddElementFieldMapping("AssessmentMedRehabEntity", "Deleted", "Deleted", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 5);
		}

		/// <summary>Inits AssessmentNoteEntity's mappings</summary>
		private void InitAssessmentNoteEntityMappings()
		{
			this.AddElementMapping("AssessmentNoteEntity", @"PsychologicalServices", @"dbo", "AssessmentNotes", 3, 0);
			this.AddElementFieldMapping("AssessmentNoteEntity", "AssessmentId", "AssessmentId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("AssessmentNoteEntity", "NoteId", "NoteId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 1);
			this.AddElementFieldMapping("AssessmentNoteEntity", "ShowOnCalendar", "ShowOnCalendar", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 2);
		}

		/// <summary>Inits AssessmentReportEntity's mappings</summary>
		private void InitAssessmentReportEntityMappings()
		{
			this.AddElementMapping("AssessmentReportEntity", @"PsychologicalServices", @"dbo", "AssessmentReports", 4, 0);
			this.AddElementFieldMapping("AssessmentReportEntity", "ReportId", "ReportId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("AssessmentReportEntity", "AssessmentId", "AssessmentId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 1);
			this.AddElementFieldMapping("AssessmentReportEntity", "ReportTypeId", "ReportTypeId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 2);
			this.AddElementFieldMapping("AssessmentReportEntity", "IsAdditional", "IsAdditional", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 3);
		}

		/// <summary>Inits AssessmentReportIssueInDisputeEntity's mappings</summary>
		private void InitAssessmentReportIssueInDisputeEntityMappings()
		{
			this.AddElementMapping("AssessmentReportIssueInDisputeEntity", @"PsychologicalServices", @"dbo", "AssessmentReportIssuesInDispute", 2, 0);
			this.AddElementFieldMapping("AssessmentReportIssueInDisputeEntity", "ReportId", "ReportId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("AssessmentReportIssueInDisputeEntity", "IssueInDisputeId", "IssueInDisputeId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 1);
		}

		/// <summary>Inits AssessmentTestingResultEntity's mappings</summary>
		private void InitAssessmentTestingResultEntityMappings()
		{
			this.AddElementMapping("AssessmentTestingResultEntity", @"PsychologicalServices", @"dbo", "AssessmentTestingResults", 3, 0);
			this.AddElementFieldMapping("AssessmentTestingResultEntity", "AssessmentId", "AssessmentId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("AssessmentTestingResultEntity", "Name", "Name", false, "VarChar", 50, 0, 0, false, "", null, typeof(System.String), 1);
			this.AddElementFieldMapping("AssessmentTestingResultEntity", "Responses", "Responses", true, "NVarChar", 2147483647, 0, 0, false, "", null, typeof(System.String), 2);
		}

		/// <summary>Inits AssessmentTypeEntity's mappings</summary>
		private void InitAssessmentTypeEntityMappings()
		{
			this.AddElementMapping("AssessmentTypeEntity", @"PsychologicalServices", @"dbo", "AssessmentTypes", 6, 0);
			this.AddElementFieldMapping("AssessmentTypeEntity", "AssessmentTypeId", "AssessmentTypeId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("AssessmentTypeEntity", "Name", "Name", false, "NVarChar", 50, 0, 0, false, "", null, typeof(System.String), 1);
			this.AddElementFieldMapping("AssessmentTypeEntity", "Description", "Description", true, "NVarChar", 100, 0, 0, false, "", null, typeof(System.String), 2);
			this.AddElementFieldMapping("AssessmentTypeEntity", "IsActive", "IsActive", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 3);
			this.AddElementFieldMapping("AssessmentTypeEntity", "ShowOnSchedule", "ShowOnSchedule", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 4);
			this.AddElementFieldMapping("AssessmentTypeEntity", "PsychometristCanInvoice", "PsychometristCanInvoice", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 5);
		}

		/// <summary>Inits AssessmentTypeAttributeTypeEntity's mappings</summary>
		private void InitAssessmentTypeAttributeTypeEntityMappings()
		{
			this.AddElementMapping("AssessmentTypeAttributeTypeEntity", @"PsychologicalServices", @"dbo", "AssessmentTypeAttributeTypes", 2, 0);
			this.AddElementFieldMapping("AssessmentTypeAttributeTypeEntity", "AssessmentTypeId", "AssessmentTypeId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("AssessmentTypeAttributeTypeEntity", "AttributeTypeId", "AttributeTypeId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 1);
		}

		/// <summary>Inits AssessmentTypeInvoiceAmountEntity's mappings</summary>
		private void InitAssessmentTypeInvoiceAmountEntityMappings()
		{
			this.AddElementMapping("AssessmentTypeInvoiceAmountEntity", @"PsychologicalServices", @"dbo", "AssessmentTypeInvoiceAmounts", 5, 0);
			this.AddElementFieldMapping("AssessmentTypeInvoiceAmountEntity", "CompanyId", "CompanyId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("AssessmentTypeInvoiceAmountEntity", "ReferralSourceId", "ReferralSourceId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 1);
			this.AddElementFieldMapping("AssessmentTypeInvoiceAmountEntity", "AssessmentTypeId", "AssessmentTypeId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 2);
			this.AddElementFieldMapping("AssessmentTypeInvoiceAmountEntity", "SingleReportInvoiceAmount", "SingleReportInvoiceAmount", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 3);
			this.AddElementFieldMapping("AssessmentTypeInvoiceAmountEntity", "ComboReportInvoiceAmount", "ComboReportInvoiceAmount", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 4);
		}

		/// <summary>Inits AssessmentTypeReportTypeEntity's mappings</summary>
		private void InitAssessmentTypeReportTypeEntityMappings()
		{
			this.AddElementMapping("AssessmentTypeReportTypeEntity", @"PsychologicalServices", @"dbo", "AssessmentTypeReportTypes", 2, 0);
			this.AddElementFieldMapping("AssessmentTypeReportTypeEntity", "AssessmentTypeId", "AssessmentTypeId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("AssessmentTypeReportTypeEntity", "ReportTypeId", "ReportTypeId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 1);
		}

		/// <summary>Inits AttributeEntity's mappings</summary>
		private void InitAttributeEntityMappings()
		{
			this.AddElementMapping("AttributeEntity", @"PsychologicalServices", @"dbo", "Attributes", 4, 0);
			this.AddElementFieldMapping("AttributeEntity", "AttributeId", "AttributeId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("AttributeEntity", "Name", "Name", false, "NVarChar", 50, 0, 0, false, "", null, typeof(System.String), 1);
			this.AddElementFieldMapping("AttributeEntity", "AttributeTypeId", "AttributeTypeId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 2);
			this.AddElementFieldMapping("AttributeEntity", "IsActive", "IsActive", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 3);
		}

		/// <summary>Inits AttributeTypeEntity's mappings</summary>
		private void InitAttributeTypeEntityMappings()
		{
			this.AddElementMapping("AttributeTypeEntity", @"PsychologicalServices", @"dbo", "AttributeTypes", 4, 0);
			this.AddElementFieldMapping("AttributeTypeEntity", "AttributeTypeId", "AttributeTypeId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("AttributeTypeEntity", "Name", "Name", false, "NVarChar", 50, 0, 0, false, "", null, typeof(System.String), 1);
			this.AddElementFieldMapping("AttributeTypeEntity", "IsActive", "IsActive", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 2);
			this.AddElementFieldMapping("AttributeTypeEntity", "ShowOnAppointment", "ShowOnAppointment", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 3);
		}

		/// <summary>Inits CalendarNoteEntity's mappings</summary>
		private void InitCalendarNoteEntityMappings()
		{
			this.AddElementMapping("CalendarNoteEntity", @"PsychologicalServices", @"dbo", "CalendarNotes", 5, 0);
			this.AddElementFieldMapping("CalendarNoteEntity", "CalendarNoteId", "CalendarNoteId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("CalendarNoteEntity", "FromDate", "FromDate", false, "DateTimeOffset", 0, 0, 0, false, "", null, typeof(System.DateTimeOffset), 1);
			this.AddElementFieldMapping("CalendarNoteEntity", "ToDate", "ToDate", false, "DateTimeOffset", 0, 0, 0, false, "", null, typeof(System.DateTimeOffset), 2);
			this.AddElementFieldMapping("CalendarNoteEntity", "NoteId", "NoteId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 3);
			this.AddElementFieldMapping("CalendarNoteEntity", "CompanyId", "CompanyId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 4);
		}

		/// <summary>Inits CityEntity's mappings</summary>
		private void InitCityEntityMappings()
		{
			this.AddElementMapping("CityEntity", @"PsychologicalServices", @"dbo", "Cities", 5, 0);
			this.AddElementFieldMapping("CityEntity", "CityId", "CityId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("CityEntity", "Name", "Name", false, "NVarChar", 50, 0, 0, false, "", null, typeof(System.String), 1);
			this.AddElementFieldMapping("CityEntity", "Province", "Province", false, "NVarChar", 10, 0, 0, false, "", null, typeof(System.String), 2);
			this.AddElementFieldMapping("CityEntity", "Country", "Country", false, "NVarChar", 50, 0, 0, false, "", null, typeof(System.String), 3);
			this.AddElementFieldMapping("CityEntity", "IsActive", "IsActive", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 4);
		}

		/// <summary>Inits ClaimEntity's mappings</summary>
		private void InitClaimEntityMappings()
		{
			this.AddElementMapping("ClaimEntity", @"PsychologicalServices", @"dbo", "Claims", 6, 0);
			this.AddElementFieldMapping("ClaimEntity", "ClaimId", "ClaimId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("ClaimEntity", "ClaimantId", "ClaimantId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 1);
			this.AddElementFieldMapping("ClaimEntity", "DateOfLoss", "DateOfLoss", true, "DateTimeOffset", 0, 0, 0, false, "", null, typeof(System.DateTimeOffset), 2);
			this.AddElementFieldMapping("ClaimEntity", "ClaimNumber", "ClaimNumber", true, "NVarChar", 50, 0, 0, false, "", null, typeof(System.String), 3);
			this.AddElementFieldMapping("ClaimEntity", "Lawyer", "Lawyer", true, "NVarChar", 50, 0, 0, false, "", null, typeof(System.String), 4);
			this.AddElementFieldMapping("ClaimEntity", "InsuranceCompany", "InsuranceCompany", true, "NVarChar", 50, 0, 0, false, "", null, typeof(System.String), 5);
		}

		/// <summary>Inits ClaimantEntity's mappings</summary>
		private void InitClaimantEntityMappings()
		{
			this.AddElementMapping("ClaimantEntity", @"PsychologicalServices", @"dbo", "Claimants", 6, 0);
			this.AddElementFieldMapping("ClaimantEntity", "ClaimantId", "ClaimantId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("ClaimantEntity", "FirstName", "FirstName", false, "NVarChar", 50, 0, 0, false, "", null, typeof(System.String), 1);
			this.AddElementFieldMapping("ClaimantEntity", "LastName", "LastName", false, "NVarChar", 50, 0, 0, false, "", null, typeof(System.String), 2);
			this.AddElementFieldMapping("ClaimantEntity", "IsActive", "IsActive", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 3);
			this.AddElementFieldMapping("ClaimantEntity", "Gender", "Gender", false, "NChar", 1, 0, 0, false, "", null, typeof(System.String), 4);
			this.AddElementFieldMapping("ClaimantEntity", "DateOfBirth", "DateOfBirth", false, "DateTimeOffset", 0, 0, 0, false, "", null, typeof(System.DateTimeOffset), 5);
		}

		/// <summary>Inits ColorEntity's mappings</summary>
		private void InitColorEntityMappings()
		{
			this.AddElementMapping("ColorEntity", @"PsychologicalServices", @"dbo", "Colors", 4, 0);
			this.AddElementFieldMapping("ColorEntity", "ColorId", "ColorId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("ColorEntity", "Name", "Name", false, "NVarChar", 50, 0, 0, false, "", null, typeof(System.String), 1);
			this.AddElementFieldMapping("ColorEntity", "HexCode", "HexCode", false, "NVarChar", 50, 0, 0, false, "", null, typeof(System.String), 2);
			this.AddElementFieldMapping("ColorEntity", "IsActive", "IsActive", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 3);
		}

		/// <summary>Inits CompanyEntity's mappings</summary>
		private void InitCompanyEntityMappings()
		{
			this.AddElementMapping("CompanyEntity", @"PsychologicalServices", @"dbo", "Companies", 20, 0);
			this.AddElementFieldMapping("CompanyEntity", "CompanyId", "CompanyId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("CompanyEntity", "Name", "Name", false, "NVarChar", 100, 0, 0, false, "", null, typeof(System.String), 1);
			this.AddElementFieldMapping("CompanyEntity", "IsActive", "IsActive", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 2);
			this.AddElementFieldMapping("CompanyEntity", "AddressId", "AddressId", true, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 3);
			this.AddElementFieldMapping("CompanyEntity", "Phone", "Phone", true, "NVarChar", 50, 0, 0, false, "", null, typeof(System.String), 4);
			this.AddElementFieldMapping("CompanyEntity", "Fax", "Fax", true, "NVarChar", 50, 0, 0, false, "", null, typeof(System.String), 5);
			this.AddElementFieldMapping("CompanyEntity", "Email", "Email", true, "NVarChar", 100, 0, 0, false, "", null, typeof(System.String), 6);
			this.AddElementFieldMapping("CompanyEntity", "TaxId", "TaxId", true, "NVarChar", 50, 0, 0, false, "", null, typeof(System.String), 7);
			this.AddElementFieldMapping("CompanyEntity", "NewAppointmentTime", "NewAppointmentTime", false, "BigInt", 0, 19, 0, false, "", null, typeof(System.Int64), 8);
			this.AddElementFieldMapping("CompanyEntity", "NewAppointmentLocationId", "NewAppointmentLocationId", true, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 9);
			this.AddElementFieldMapping("CompanyEntity", "NewAppointmentPsychologistId", "NewAppointmentPsychologistId", true, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 10);
			this.AddElementFieldMapping("CompanyEntity", "NewAppointmentPsychometristId", "NewAppointmentPsychometristId", true, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 11);
			this.AddElementFieldMapping("CompanyEntity", "NewAppointmentStatusId", "NewAppointmentStatusId", true, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 12);
			this.AddElementFieldMapping("CompanyEntity", "NewAssessmentReportStatusId", "NewAssessmentReportStatusId", true, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 13);
			this.AddElementFieldMapping("CompanyEntity", "NewAssessmentSummaryNoteText", "NewAssessmentSummaryNoteText", true, "NVarChar", 2147483647, 0, 0, false, "", null, typeof(System.String), 14);
			this.AddElementFieldMapping("CompanyEntity", "Timezone", "Timezone", false, "NVarChar", 50, 0, 0, false, "", null, typeof(System.String), 15);
			this.AddElementFieldMapping("CompanyEntity", "ReplyToEmail", "ReplyToEmail", true, "NVarChar", 100, 0, 0, false, "", null, typeof(System.String), 16);
			this.AddElementFieldMapping("CompanyEntity", "NewAssessmentAssessmentTypeId", "NewAssessmentAssessmentTypeId", true, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 17);
			this.AddElementFieldMapping("CompanyEntity", "InvoiceCounter", "InvoiceCounter", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 18);
			this.AddElementFieldMapping("CompanyEntity", "AccountingEmail", "AccountingEmail", true, "NVarChar", 100, 0, 0, false, "", null, typeof(System.String), 19);
		}

		/// <summary>Inits CompanyAttributeEntity's mappings</summary>
		private void InitCompanyAttributeEntityMappings()
		{
			this.AddElementMapping("CompanyAttributeEntity", @"PsychologicalServices", @"dbo", "CompanyAttributes", 2, 0);
			this.AddElementFieldMapping("CompanyAttributeEntity", "CompanyId", "CompanyId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("CompanyAttributeEntity", "AttributeId", "AttributeId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 1);
		}

		/// <summary>Inits ConsultingAgreementEntity's mappings</summary>
		private void InitConsultingAgreementEntityMappings()
		{
			this.AddElementMapping("ConsultingAgreementEntity", @"PsychologicalServices", @"dbo", "ConsultingAgreements", 7, 0);
			this.AddElementFieldMapping("ConsultingAgreementEntity", "ConsultingAgreementId", "ConsultingAgreementId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("ConsultingAgreementEntity", "CompanyId", "CompanyId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 1);
			this.AddElementFieldMapping("ConsultingAgreementEntity", "PsychologistId", "PsychologistId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 2);
			this.AddElementFieldMapping("ConsultingAgreementEntity", "BillToReferralSourceId", "BillToReferralSourceId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 3);
			this.AddElementFieldMapping("ConsultingAgreementEntity", "IsActive", "IsActive", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 4);
			this.AddElementFieldMapping("ConsultingAgreementEntity", "BillReferenceNumber", "BillReferenceNumber", true, "VarChar", 50, 0, 0, false, "", null, typeof(System.String), 5);
			this.AddElementFieldMapping("ConsultingAgreementEntity", "ConsultingEmailAddress", "ConsultingEmailAddress", true, "NVarChar", 100, 0, 0, false, "", null, typeof(System.String), 6);
		}

		/// <summary>Inits ContactEntity's mappings</summary>
		private void InitContactEntityMappings()
		{
			this.AddElementMapping("ContactEntity", @"PsychologicalServices", @"dbo", "Contacts", 8, 0);
			this.AddElementFieldMapping("ContactEntity", "ContactId", "ContactId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("ContactEntity", "FirstName", "FirstName", false, "NVarChar", 50, 0, 0, false, "", null, typeof(System.String), 1);
			this.AddElementFieldMapping("ContactEntity", "LastName", "LastName", false, "NVarChar", 50, 0, 0, false, "", null, typeof(System.String), 2);
			this.AddElementFieldMapping("ContactEntity", "Email", "Email", true, "NVarChar", 100, 0, 0, false, "", null, typeof(System.String), 3);
			this.AddElementFieldMapping("ContactEntity", "ContactTypeId", "ContactTypeId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 4);
			this.AddElementFieldMapping("ContactEntity", "AddressId", "AddressId", true, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 5);
			this.AddElementFieldMapping("ContactEntity", "EmployerId", "EmployerId", true, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 6);
			this.AddElementFieldMapping("ContactEntity", "IsActive", "IsActive", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 7);
		}

		/// <summary>Inits ContactTypeEntity's mappings</summary>
		private void InitContactTypeEntityMappings()
		{
			this.AddElementMapping("ContactTypeEntity", @"PsychologicalServices", @"dbo", "ContactTypes", 3, 0);
			this.AddElementFieldMapping("ContactTypeEntity", "ContactTypeId", "ContactTypeId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("ContactTypeEntity", "Name", "Name", false, "NVarChar", 50, 0, 0, false, "", null, typeof(System.String), 1);
			this.AddElementFieldMapping("ContactTypeEntity", "IsActive", "IsActive", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 2);
		}

		/// <summary>Inits CredibilityEntity's mappings</summary>
		private void InitCredibilityEntityMappings()
		{
			this.AddElementMapping("CredibilityEntity", @"PsychologicalServices", @"dbo", "Credibilities", 3, 0);
			this.AddElementFieldMapping("CredibilityEntity", "CredibilityId", "CredibilityId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("CredibilityEntity", "Name", "Name", false, "NVarChar", 50, 0, 0, false, "", null, typeof(System.String), 1);
			this.AddElementFieldMapping("CredibilityEntity", "IsActive", "IsActive", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 2);
		}

		/// <summary>Inits DiagnosisFoundResponseEntity's mappings</summary>
		private void InitDiagnosisFoundResponseEntityMappings()
		{
			this.AddElementMapping("DiagnosisFoundResponseEntity", @"PsychologicalServices", @"dbo", "DiagnosisFoundResponses", 3, 0);
			this.AddElementFieldMapping("DiagnosisFoundResponseEntity", "DiagnosisFoundResponseId", "DiagnosisFoundResponseId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("DiagnosisFoundResponseEntity", "Name", "Name", false, "NVarChar", 50, 0, 0, false, "", null, typeof(System.String), 1);
			this.AddElementFieldMapping("DiagnosisFoundResponseEntity", "IsActive", "IsActive", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 2);
		}

		/// <summary>Inits DocumentEntity's mappings</summary>
		private void InitDocumentEntityMappings()
		{
			this.AddElementMapping("DocumentEntity", @"PsychologicalServices", @"dbo", "Documents", 4, 0);
			this.AddElementFieldMapping("DocumentEntity", "DocumentId", "DocumentId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("DocumentEntity", "Name", "Name", false, "NVarChar", 200, 0, 0, false, "", null, typeof(System.String), 1);
			this.AddElementFieldMapping("DocumentEntity", "Size", "Size", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 2);
			this.AddElementFieldMapping("DocumentEntity", "Data", "Data", false, "VarBinary", 2147483647, 0, 0, false, "", null, typeof(System.Byte[]), 3);
		}

		/// <summary>Inits EmployerEntity's mappings</summary>
		private void InitEmployerEntityMappings()
		{
			this.AddElementMapping("EmployerEntity", @"PsychologicalServices", @"dbo", "Employers", 4, 0);
			this.AddElementFieldMapping("EmployerEntity", "EmployerId", "EmployerId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("EmployerEntity", "Name", "Name", false, "NVarChar", 50, 0, 0, false, "", null, typeof(System.String), 1);
			this.AddElementFieldMapping("EmployerEntity", "EmployerTypeId", "EmployerTypeId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 2);
			this.AddElementFieldMapping("EmployerEntity", "IsActive", "IsActive", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 3);
		}

		/// <summary>Inits EmployerTypeEntity's mappings</summary>
		private void InitEmployerTypeEntityMappings()
		{
			this.AddElementMapping("EmployerTypeEntity", @"PsychologicalServices", @"dbo", "EmployerTypes", 3, 0);
			this.AddElementFieldMapping("EmployerTypeEntity", "EmployerTypeId", "EmployerTypeId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("EmployerTypeEntity", "Name", "Name", false, "NVarChar", 50, 0, 0, false, "", null, typeof(System.String), 1);
			this.AddElementFieldMapping("EmployerTypeEntity", "IsActive", "IsActive", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 2);
		}

		/// <summary>Inits EventEntity's mappings</summary>
		private void InitEventEntityMappings()
		{
			this.AddElementMapping("EventEntity", @"PsychologicalServices", @"dbo", "Events", 8, 0);
			this.AddElementFieldMapping("EventEntity", "EventId", "EventId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("EventEntity", "Description", "Description", false, "NVarChar", 300, 0, 0, false, "", null, typeof(System.String), 1);
			this.AddElementFieldMapping("EventEntity", "Location", "Location", true, "NVarChar", 300, 0, 0, false, "", null, typeof(System.String), 2);
			this.AddElementFieldMapping("EventEntity", "Time", "Time", true, "NVarChar", 100, 0, 0, false, "", null, typeof(System.String), 3);
			this.AddElementFieldMapping("EventEntity", "Url", "Url", true, "NVarChar", 1000, 0, 0, false, "", null, typeof(System.String), 4);
			this.AddElementFieldMapping("EventEntity", "Expires", "Expires", false, "DateTimeOffset", 0, 0, 0, false, "", null, typeof(System.DateTimeOffset), 5);
			this.AddElementFieldMapping("EventEntity", "IsActive", "IsActive", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 6);
			this.AddElementFieldMapping("EventEntity", "CompanyId", "CompanyId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 7);
		}

		/// <summary>Inits GoseAccidentTimeframeEntity's mappings</summary>
		private void InitGoseAccidentTimeframeEntityMappings()
		{
			this.AddElementMapping("GoseAccidentTimeframeEntity", @"PsychologicalServices", @"dbo", "GoseAccidentTimeframes", 6, 0);
			this.AddElementFieldMapping("GoseAccidentTimeframeEntity", "GoseAccidentTimeframeId", "GoseAccidentTimeframeId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("GoseAccidentTimeframeEntity", "Months", "Months", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 1);
			this.AddElementFieldMapping("GoseAccidentTimeframeEntity", "Description", "Description", false, "VarChar", 50, 0, 0, false, "", null, typeof(System.String), 2);
			this.AddElementFieldMapping("GoseAccidentTimeframeEntity", "Basic", "Basic", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 3);
			this.AddElementFieldMapping("GoseAccidentTimeframeEntity", "Intermediate", "Intermediate", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 4);
			this.AddElementFieldMapping("GoseAccidentTimeframeEntity", "Advanced", "Advanced", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 5);
		}

		/// <summary>Inits GoseFamilyAndFriendshipsDisruptionLevelEntity's mappings</summary>
		private void InitGoseFamilyAndFriendshipsDisruptionLevelEntityMappings()
		{
			this.AddElementMapping("GoseFamilyAndFriendshipsDisruptionLevelEntity", @"PsychologicalServices", @"dbo", "GoseFamilyAndFriendshipsDisruptionLevels", 2, 0);
			this.AddElementFieldMapping("GoseFamilyAndFriendshipsDisruptionLevelEntity", "GoseFamilyAndFriendshipsDisruptionLevelId", "GoseFamilyAndFriendshipsDisruptionLevelId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("GoseFamilyAndFriendshipsDisruptionLevelEntity", "Description", "Description", false, "VarChar", 100, 0, 0, false, "", null, typeof(System.String), 1);
		}

		/// <summary>Inits GoseInterviewEntity's mappings</summary>
		private void InitGoseInterviewEntityMappings()
		{
			this.AddElementMapping("GoseInterviewEntity", @"PsychologicalServices", @"dbo", "GoseInterviews", 28, 0);
			this.AddElementFieldMapping("GoseInterviewEntity", "GoseInterviewId", "GoseInterviewId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("GoseInterviewEntity", "AssessmentId", "AssessmentId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 1);
			this.AddElementFieldMapping("GoseInterviewEntity", "AccidentTimeframeId", "AccidentTimeframeId", true, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 2);
			this.AddElementFieldMapping("GoseInterviewEntity", "RespondentTypeId", "RespondentTypeId", true, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 3);
			this.AddElementFieldMapping("GoseInterviewEntity", "ConciousnessAbleToObeyCommandsOrSpeak", "ConciousnessAbleToObeyCommandsOrSpeak", true, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 4);
			this.AddElementFieldMapping("GoseInterviewEntity", "IndependenceAtHomeRequireEveryDayAssistance", "IndependenceAtHomeRequireEveryDayAssistance", true, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 5);
			this.AddElementFieldMapping("GoseInterviewEntity", "IndependenceAtHomeNeedFrequentHelp", "IndependenceAtHomeNeedFrequentHelp", true, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 6);
			this.AddElementFieldMapping("GoseInterviewEntity", "IndependenceAtHomeIndependentBeforeInjury", "IndependenceAtHomeIndependentBeforeInjury", true, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 7);
			this.AddElementFieldMapping("GoseInterviewEntity", "IndependenceOutsideHomeAbleToShopWithoutAssistance", "IndependenceOutsideHomeAbleToShopWithoutAssistance", true, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 8);
			this.AddElementFieldMapping("GoseInterviewEntity", "IndependenceOutsideHomeAbleToShopWithoutAssistanceBeforeInjury", "IndependenceOutsideHomeAbleToShopWithoutAssistanceBeforeInjury", true, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 9);
			this.AddElementFieldMapping("GoseInterviewEntity", "IndependenceOutsideHomeAbleToTravelLocallyWithoutAssistance", "IndependenceOutsideHomeAbleToTravelLocallyWithoutAssistance", true, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 10);
			this.AddElementFieldMapping("GoseInterviewEntity", "IndependenceOutsideHomeAbleToTravelLocallyWithoutAssistanceBeforeInjury", "IndependenceOutsideHomeAbleToTravelLocallyWithoutAssistanceBeforeInjury", true, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 11);
			this.AddElementFieldMapping("GoseInterviewEntity", "WorkAbleToWorkAtPreviousCapacity", "WorkAbleToWorkAtPreviousCapacity", true, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 12);
			this.AddElementFieldMapping("GoseInterviewEntity", "WorkRestrictionLevelId", "WorkRestrictionLevelId", true, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 13);
			this.AddElementFieldMapping("GoseInterviewEntity", "WorkRestrictionLevelDifferentAfterInjury", "WorkRestrictionLevelDifferentAfterInjury", true, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 14);
			this.AddElementFieldMapping("GoseInterviewEntity", "SocialAndLeisureAbleToResumeRegularActivities", "SocialAndLeisureAbleToResumeRegularActivities", true, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 15);
			this.AddElementFieldMapping("GoseInterviewEntity", "SocialAndLeisureExtentOfRestrictionId", "SocialAndLeisureExtentOfRestrictionId", true, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 16);
			this.AddElementFieldMapping("GoseInterviewEntity", "SocialAndLeisureExtentOfRestrictionDifferentAfterInjury", "SocialAndLeisureExtentOfRestrictionDifferentAfterInjury", true, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 17);
			this.AddElementFieldMapping("GoseInterviewEntity", "FamilyAndFriendshipsDisruptionDueToPsychologicalProblems", "FamilyAndFriendshipsDisruptionDueToPsychologicalProblems", true, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 18);
			this.AddElementFieldMapping("GoseInterviewEntity", "FamilyAndFriendshipsDisruptionLevelId", "FamilyAndFriendshipsDisruptionLevelId", true, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 19);
			this.AddElementFieldMapping("GoseInterviewEntity", "FamilyAndFriendshipsDisruptionLevelDifferentAfterInjury", "FamilyAndFriendshipsDisruptionLevelDifferentAfterInjury", true, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 20);
			this.AddElementFieldMapping("GoseInterviewEntity", "ReturnToNormalLifeAnyOtherCurrentProblems", "ReturnToNormalLifeAnyOtherCurrentProblems", true, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 21);
			this.AddElementFieldMapping("GoseInterviewEntity", "ReturnToNormalLifeSimilarProblemsHaveBecomeWorse", "ReturnToNormalLifeSimilarProblemsHaveBecomeWorse", true, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 22);
			this.AddElementFieldMapping("GoseInterviewEntity", "ReturnToNormalLifeMostImportantFactorInOutcomeId", "ReturnToNormalLifeMostImportantFactorInOutcomeId", true, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 23);
			this.AddElementFieldMapping("GoseInterviewEntity", "CreatedDate", "CreatedDate", false, "DateTimeOffset", 0, 0, 0, false, "", null, typeof(System.DateTimeOffset), 24);
			this.AddElementFieldMapping("GoseInterviewEntity", "CreateUserId", "CreateUserId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 25);
			this.AddElementFieldMapping("GoseInterviewEntity", "UpdateDate", "UpdateDate", false, "DateTimeOffset", 0, 0, 0, false, "", null, typeof(System.DateTimeOffset), 26);
			this.AddElementFieldMapping("GoseInterviewEntity", "UpdateUserId", "UpdateUserId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 27);
		}

		/// <summary>Inits GoseRespondentTypeEntity's mappings</summary>
		private void InitGoseRespondentTypeEntityMappings()
		{
			this.AddElementMapping("GoseRespondentTypeEntity", @"PsychologicalServices", @"dbo", "GoseRespondentTypes", 2, 0);
			this.AddElementFieldMapping("GoseRespondentTypeEntity", "GoseRespondentTypeId", "GoseRespondentTypeId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("GoseRespondentTypeEntity", "Description", "Description", false, "VarChar", 50, 0, 0, false, "", null, typeof(System.String), 1);
		}

		/// <summary>Inits GoseReturnToNormalLifeOutcomeFactorEntity's mappings</summary>
		private void InitGoseReturnToNormalLifeOutcomeFactorEntityMappings()
		{
			this.AddElementMapping("GoseReturnToNormalLifeOutcomeFactorEntity", @"PsychologicalServices", @"dbo", "GoseReturnToNormalLifeOutcomeFactors", 2, 0);
			this.AddElementFieldMapping("GoseReturnToNormalLifeOutcomeFactorEntity", "GoseReturnToNormalLifeOutcomeFactorId", "GoseReturnToNormalLifeOutcomeFactorId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("GoseReturnToNormalLifeOutcomeFactorEntity", "Description", "Description", false, "VarChar", 100, 0, 0, false, "", null, typeof(System.String), 1);
		}

		/// <summary>Inits GoseSocialAndLeisureRestrictionExtentEntity's mappings</summary>
		private void InitGoseSocialAndLeisureRestrictionExtentEntityMappings()
		{
			this.AddElementMapping("GoseSocialAndLeisureRestrictionExtentEntity", @"PsychologicalServices", @"dbo", "GoseSocialAndLeisureRestrictionExtents", 2, 0);
			this.AddElementFieldMapping("GoseSocialAndLeisureRestrictionExtentEntity", "GoseSocialAndLeisureRestrictionExtentId", "GoseSocialAndLeisureRestrictionExtentId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("GoseSocialAndLeisureRestrictionExtentEntity", "Description", "Description", false, "VarChar", 100, 0, 0, false, "", null, typeof(System.String), 1);
		}

		/// <summary>Inits GoseWorkRestrictionLevelEntity's mappings</summary>
		private void InitGoseWorkRestrictionLevelEntityMappings()
		{
			this.AddElementMapping("GoseWorkRestrictionLevelEntity", @"PsychologicalServices", @"dbo", "GoseWorkRestrictionLevels", 2, 0);
			this.AddElementFieldMapping("GoseWorkRestrictionLevelEntity", "GoseWorkRestrictionLevelId", "GoseWorkRestrictionLevelId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("GoseWorkRestrictionLevelEntity", "Description", "Description", false, "VarChar", 200, 0, 0, false, "", null, typeof(System.String), 1);
		}

		/// <summary>Inits InvoiceEntity's mappings</summary>
		private void InitInvoiceEntityMappings()
		{
			this.AddElementMapping("InvoiceEntity", @"PsychologicalServices", @"dbo", "Invoices", 11, 0);
			this.AddElementFieldMapping("InvoiceEntity", "InvoiceId", "InvoiceId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("InvoiceEntity", "Identifier", "Identifier", false, "NVarChar", 20, 0, 0, false, "", null, typeof(System.String), 1);
			this.AddElementFieldMapping("InvoiceEntity", "InvoiceDate", "InvoiceDate", false, "DateTimeOffset", 0, 0, 0, false, "", null, typeof(System.DateTimeOffset), 2);
			this.AddElementFieldMapping("InvoiceEntity", "InvoiceStatusId", "InvoiceStatusId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 3);
			this.AddElementFieldMapping("InvoiceEntity", "UpdateDate", "UpdateDate", false, "DateTimeOffset", 0, 0, 0, false, "", null, typeof(System.DateTimeOffset), 4);
			this.AddElementFieldMapping("InvoiceEntity", "TaxRate", "TaxRate", false, "Decimal", 0, 18, 4, false, "", null, typeof(System.Decimal), 5);
			this.AddElementFieldMapping("InvoiceEntity", "Total", "Total", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 6);
			this.AddElementFieldMapping("InvoiceEntity", "InvoiceTypeId", "InvoiceTypeId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 7);
			this.AddElementFieldMapping("InvoiceEntity", "PayableToId", "PayableToId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 8);
			this.AddElementFieldMapping("InvoiceEntity", "InvoicePeriodBegin", "InvoicePeriodBegin", false, "DateTimeOffset", 0, 0, 0, false, "", null, typeof(System.DateTimeOffset), 9);
			this.AddElementFieldMapping("InvoiceEntity", "InvoicePeriodEnd", "InvoicePeriodEnd", false, "DateTimeOffset", 0, 0, 0, false, "", null, typeof(System.DateTimeOffset), 10);
		}

		/// <summary>Inits InvoiceDocumentEntity's mappings</summary>
		private void InitInvoiceDocumentEntityMappings()
		{
			this.AddElementMapping("InvoiceDocumentEntity", @"PsychologicalServices", @"dbo", "InvoiceDocuments", 5, 0);
			this.AddElementFieldMapping("InvoiceDocumentEntity", "InvoiceDocumentId", "InvoiceDocumentId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("InvoiceDocumentEntity", "InvoiceId", "InvoiceId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 1);
			this.AddElementFieldMapping("InvoiceDocumentEntity", "Document", "Document", false, "VarBinary", 2147483647, 0, 0, false, "", null, typeof(System.Byte[]), 2);
			this.AddElementFieldMapping("InvoiceDocumentEntity", "CreateDate", "CreateDate", false, "DateTimeOffset", 0, 0, 0, false, "", null, typeof(System.DateTimeOffset), 3);
			this.AddElementFieldMapping("InvoiceDocumentEntity", "FileName", "FileName", false, "VarChar", 150, 0, 0, false, "", null, typeof(System.String), 4);
		}

		/// <summary>Inits InvoiceDocumentSendLogEntity's mappings</summary>
		private void InitInvoiceDocumentSendLogEntityMappings()
		{
			this.AddElementMapping("InvoiceDocumentSendLogEntity", @"PsychologicalServices", @"dbo", "InvoiceDocumentSendLogs", 4, 0);
			this.AddElementFieldMapping("InvoiceDocumentSendLogEntity", "InvoiceDocumentSendLogId", "InvoiceDocumentSendLogId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("InvoiceDocumentSendLogEntity", "InvoiceDocumentId", "InvoiceDocumentId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 1);
			this.AddElementFieldMapping("InvoiceDocumentSendLogEntity", "Recipients", "Recipients", false, "NVarChar", 4000, 0, 0, false, "", null, typeof(System.String), 2);
			this.AddElementFieldMapping("InvoiceDocumentSendLogEntity", "SentDate", "SentDate", false, "DateTimeOffset", 0, 0, 0, false, "", null, typeof(System.DateTimeOffset), 3);
		}

		/// <summary>Inits InvoiceLineEntity's mappings</summary>
		private void InitInvoiceLineEntityMappings()
		{
			this.AddElementMapping("InvoiceLineEntity", @"PsychologicalServices", @"dbo", "InvoiceLines", 6, 0);
			this.AddElementFieldMapping("InvoiceLineEntity", "InvoiceLineId", "InvoiceLineId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("InvoiceLineEntity", "Description", "Description", false, "NVarChar", 100, 0, 0, false, "", null, typeof(System.String), 1);
			this.AddElementFieldMapping("InvoiceLineEntity", "Amount", "Amount", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 2);
			this.AddElementFieldMapping("InvoiceLineEntity", "IsCustom", "IsCustom", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 3);
			this.AddElementFieldMapping("InvoiceLineEntity", "OriginalAmount", "OriginalAmount", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 4);
			this.AddElementFieldMapping("InvoiceLineEntity", "InvoiceLineGroupId", "InvoiceLineGroupId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 5);
		}

		/// <summary>Inits InvoiceLineGroupEntity's mappings</summary>
		private void InitInvoiceLineGroupEntityMappings()
		{
			this.AddElementMapping("InvoiceLineGroupEntity", @"PsychologicalServices", @"dbo", "InvoiceLineGroups", 4, 0);
			this.AddElementFieldMapping("InvoiceLineGroupEntity", "InvoiceLineGroupId", "InvoiceLineGroupId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("InvoiceLineGroupEntity", "InvoiceId", "InvoiceId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 1);
			this.AddElementFieldMapping("InvoiceLineGroupEntity", "Description", "Description", false, "NVarChar", 200, 0, 0, false, "", null, typeof(System.String), 2);
			this.AddElementFieldMapping("InvoiceLineGroupEntity", "Sort", "Sort", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 3);
		}

		/// <summary>Inits InvoiceLineGroupAppointmentEntity's mappings</summary>
		private void InitInvoiceLineGroupAppointmentEntityMappings()
		{
			this.AddElementMapping("InvoiceLineGroupAppointmentEntity", @"PsychologicalServices", @"dbo", "InvoiceLineGroupAppointments", 2, 0);
			this.AddElementFieldMapping("InvoiceLineGroupAppointmentEntity", "InvoiceLineGroupId", "InvoiceLineGroupId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("InvoiceLineGroupAppointmentEntity", "AppointmentId", "AppointmentId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 1);
		}

		/// <summary>Inits InvoiceLineGroupArbitrationEntity's mappings</summary>
		private void InitInvoiceLineGroupArbitrationEntityMappings()
		{
			this.AddElementMapping("InvoiceLineGroupArbitrationEntity", @"PsychologicalServices", @"dbo", "InvoiceLineGroupArbitrations", 2, 0);
			this.AddElementFieldMapping("InvoiceLineGroupArbitrationEntity", "InvoiceLineGroupId", "InvoiceLineGroupId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("InvoiceLineGroupArbitrationEntity", "ArbitrationId", "ArbitrationId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 1);
		}

		/// <summary>Inits InvoiceLineGroupConsultingAgreementEntity's mappings</summary>
		private void InitInvoiceLineGroupConsultingAgreementEntityMappings()
		{
			this.AddElementMapping("InvoiceLineGroupConsultingAgreementEntity", @"PsychologicalServices", @"dbo", "InvoiceLineGroupConsultingAgreements", 2, 0);
			this.AddElementFieldMapping("InvoiceLineGroupConsultingAgreementEntity", "InvoiceLineGroupId", "InvoiceLineGroupId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("InvoiceLineGroupConsultingAgreementEntity", "ConsultingAgreementId", "ConsultingAgreementId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 1);
		}

		/// <summary>Inits InvoiceLineGroupRawTestDataEntity's mappings</summary>
		private void InitInvoiceLineGroupRawTestDataEntityMappings()
		{
			this.AddElementMapping("InvoiceLineGroupRawTestDataEntity", @"PsychologicalServices", @"dbo", "InvoiceLineGroupRawTestData", 2, 0);
			this.AddElementFieldMapping("InvoiceLineGroupRawTestDataEntity", "InvoiceLineGroupId", "InvoiceLineGroupId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("InvoiceLineGroupRawTestDataEntity", "RawTestDataId", "RawTestDataId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 1);
		}

		/// <summary>Inits InvoiceStatusEntity's mappings</summary>
		private void InitInvoiceStatusEntityMappings()
		{
			this.AddElementMapping("InvoiceStatusEntity", @"PsychologicalServices", @"dbo", "InvoiceStatuses", 6, 0);
			this.AddElementFieldMapping("InvoiceStatusEntity", "InvoiceStatusId", "InvoiceStatusId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("InvoiceStatusEntity", "Name", "Name", false, "NVarChar", 50, 0, 0, false, "", null, typeof(System.String), 1);
			this.AddElementFieldMapping("InvoiceStatusEntity", "IsActive", "IsActive", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 2);
			this.AddElementFieldMapping("InvoiceStatusEntity", "CanEdit", "CanEdit", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 3);
			this.AddElementFieldMapping("InvoiceStatusEntity", "SaveDocument", "SaveDocument", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 4);
			this.AddElementFieldMapping("InvoiceStatusEntity", "ActionName", "ActionName", false, "NVarChar", 50, 0, 0, false, "", null, typeof(System.String), 5);
		}

		/// <summary>Inits InvoiceStatusChangeEntity's mappings</summary>
		private void InitInvoiceStatusChangeEntityMappings()
		{
			this.AddElementMapping("InvoiceStatusChangeEntity", @"PsychologicalServices", @"dbo", "InvoiceStatusChanges", 4, 0);
			this.AddElementFieldMapping("InvoiceStatusChangeEntity", "InvoiceStatusChangeId", "InvoiceStatusChangeId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("InvoiceStatusChangeEntity", "InvoiceId", "InvoiceId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 1);
			this.AddElementFieldMapping("InvoiceStatusChangeEntity", "InvoiceStatusId", "InvoiceStatusId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 2);
			this.AddElementFieldMapping("InvoiceStatusChangeEntity", "UpdateDate", "UpdateDate", false, "DateTimeOffset", 0, 0, 0, false, "", null, typeof(System.DateTimeOffset), 3);
		}

		/// <summary>Inits InvoiceStatusPathsEntity's mappings</summary>
		private void InitInvoiceStatusPathsEntityMappings()
		{
			this.AddElementMapping("InvoiceStatusPathsEntity", @"PsychologicalServices", @"dbo", "InvoiceStatusPaths", 3, 0);
			this.AddElementFieldMapping("InvoiceStatusPathsEntity", "InvoiceStatusPathId", "InvoiceStatusPathId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("InvoiceStatusPathsEntity", "InvoiceStatusId", "InvoiceStatusId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 1);
			this.AddElementFieldMapping("InvoiceStatusPathsEntity", "NextInvoiceStatusId", "NextInvoiceStatusId", true, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 2);
		}

		/// <summary>Inits InvoiceTypeEntity's mappings</summary>
		private void InitInvoiceTypeEntityMappings()
		{
			this.AddElementMapping("InvoiceTypeEntity", @"PsychologicalServices", @"dbo", "InvoiceTypes", 4, 0);
			this.AddElementFieldMapping("InvoiceTypeEntity", "InvoiceTypeId", "InvoiceTypeId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("InvoiceTypeEntity", "Name", "Name", false, "NVarChar", 50, 0, 0, false, "", null, typeof(System.String), 1);
			this.AddElementFieldMapping("InvoiceTypeEntity", "IsActive", "IsActive", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 2);
			this.AddElementFieldMapping("InvoiceTypeEntity", "CanSend", "CanSend", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 3);
		}

		/// <summary>Inits IssueInDisputeEntity's mappings</summary>
		private void InitIssueInDisputeEntityMappings()
		{
			this.AddElementMapping("IssueInDisputeEntity", @"PsychologicalServices", @"dbo", "IssuesInDispute", 3, 0);
			this.AddElementFieldMapping("IssueInDisputeEntity", "IssueInDisputeId", "IssueInDisputeId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("IssueInDisputeEntity", "Name", "Name", false, "NVarChar", 50, 0, 0, false, "", null, typeof(System.String), 1);
			this.AddElementFieldMapping("IssueInDisputeEntity", "IsActive", "IsActive", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 2);
		}

		/// <summary>Inits IssueInDisputeInvoiceAmountEntity's mappings</summary>
		private void InitIssueInDisputeInvoiceAmountEntityMappings()
		{
			this.AddElementMapping("IssueInDisputeInvoiceAmountEntity", @"PsychologicalServices", @"dbo", "IssueInDisputeInvoiceAmounts", 3, 0);
			this.AddElementFieldMapping("IssueInDisputeInvoiceAmountEntity", "CompanyId", "CompanyId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("IssueInDisputeInvoiceAmountEntity", "IssueInDisputeId", "IssueInDisputeId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 1);
			this.AddElementFieldMapping("IssueInDisputeInvoiceAmountEntity", "InvoiceAmount", "InvoiceAmount", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 2);
		}

		/// <summary>Inits NoteEntity's mappings</summary>
		private void InitNoteEntityMappings()
		{
			this.AddElementMapping("NoteEntity", @"PsychologicalServices", @"dbo", "Notes", 6, 0);
			this.AddElementFieldMapping("NoteEntity", "NoteId", "NoteId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("NoteEntity", "Note", "Note", false, "NVarChar", 2147483647, 0, 0, false, "", null, typeof(System.String), 1);
			this.AddElementFieldMapping("NoteEntity", "UpdateUserId", "UpdateUserId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 2);
			this.AddElementFieldMapping("NoteEntity", "UpdateDate", "UpdateDate", false, "DateTimeOffset", 0, 0, 0, false, "", null, typeof(System.DateTimeOffset), 3);
			this.AddElementFieldMapping("NoteEntity", "CreateUserId", "CreateUserId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 4);
			this.AddElementFieldMapping("NoteEntity", "CreateDate", "CreateDate", false, "DateTimeOffset", 0, 0, 0, false, "", null, typeof(System.DateTimeOffset), 5);
		}

		/// <summary>Inits PhoneLogEntity's mappings</summary>
		private void InitPhoneLogEntityMappings()
		{
			this.AddElementMapping("PhoneLogEntity", @"PsychologicalServices", @"dbo", "PhoneLogs", 11, 0);
			this.AddElementFieldMapping("PhoneLogEntity", "PhoneLogId", "PhoneLogId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("PhoneLogEntity", "CallTime", "CallTime", false, "DateTimeOffset", 0, 0, 0, false, "", null, typeof(System.DateTimeOffset), 1);
			this.AddElementFieldMapping("PhoneLogEntity", "CompanyName", "CompanyName", true, "NVarChar", 100, 0, 0, false, "", null, typeof(System.String), 2);
			this.AddElementFieldMapping("PhoneLogEntity", "CallerName", "CallerName", true, "NVarChar", 100, 0, 0, false, "", null, typeof(System.String), 3);
			this.AddElementFieldMapping("PhoneLogEntity", "ClaimantFirstName", "ClaimantFirstName", true, "NVarChar", 50, 0, 0, false, "", null, typeof(System.String), 4);
			this.AddElementFieldMapping("PhoneLogEntity", "ClaimantLastName", "ClaimantLastName", true, "NVarChar", 50, 0, 0, false, "", null, typeof(System.String), 5);
			this.AddElementFieldMapping("PhoneLogEntity", "NoteId", "NoteId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 6);
			this.AddElementFieldMapping("PhoneLogEntity", "CreateDate", "CreateDate", false, "DateTimeOffset", 0, 0, 0, false, "", null, typeof(System.DateTimeOffset), 7);
			this.AddElementFieldMapping("PhoneLogEntity", "CreateUserId", "CreateUserId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 8);
			this.AddElementFieldMapping("PhoneLogEntity", "UpdateDate", "UpdateDate", false, "DateTimeOffset", 0, 0, 0, false, "", null, typeof(System.DateTimeOffset), 9);
			this.AddElementFieldMapping("PhoneLogEntity", "UpdateUserId", "UpdateUserId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 10);
		}

		/// <summary>Inits PsychometristInvoiceAmountEntity's mappings</summary>
		private void InitPsychometristInvoiceAmountEntityMappings()
		{
			this.AddElementMapping("PsychometristInvoiceAmountEntity", @"PsychologicalServices", @"dbo", "PsychometristInvoiceAmounts", 5, 0);
			this.AddElementFieldMapping("PsychometristInvoiceAmountEntity", "AssessmentTypeId", "AssessmentTypeId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("PsychometristInvoiceAmountEntity", "AppointmentStatusId", "AppointmentStatusId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 1);
			this.AddElementFieldMapping("PsychometristInvoiceAmountEntity", "CompanyId", "CompanyId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 2);
			this.AddElementFieldMapping("PsychometristInvoiceAmountEntity", "AppointmentSequenceId", "AppointmentSequenceId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 3);
			this.AddElementFieldMapping("PsychometristInvoiceAmountEntity", "InvoiceAmount", "InvoiceAmount", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 4);
		}

		/// <summary>Inits RawTestDataEntity's mappings</summary>
		private void InitRawTestDataEntityMappings()
		{
			this.AddElementMapping("RawTestDataEntity", @"PsychologicalServices", @"dbo", "RawTestDatas", 11, 0);
			this.AddElementFieldMapping("RawTestDataEntity", "RawTestDataId", "RawTestDataId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("RawTestDataEntity", "ClaimantId", "ClaimantId", true, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 1);
			this.AddElementFieldMapping("RawTestDataEntity", "BillToReferralSourceId", "BillToReferralSourceId", true, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 2);
			this.AddElementFieldMapping("RawTestDataEntity", "RequestReceivedDate", "RequestReceivedDate", true, "DateTimeOffset", 0, 0, 0, false, "", null, typeof(System.DateTimeOffset), 3);
			this.AddElementFieldMapping("RawTestDataEntity", "SignedAuthorizationReceivedDate", "SignedAuthorizationReceivedDate", true, "DateTimeOffset", 0, 0, 0, false, "", null, typeof(System.DateTimeOffset), 4);
			this.AddElementFieldMapping("RawTestDataEntity", "DataSentDate", "DataSentDate", true, "DateTimeOffset", 0, 0, 0, false, "", null, typeof(System.DateTimeOffset), 5);
			this.AddElementFieldMapping("RawTestDataEntity", "RawTestDataStatusId", "RawTestDataStatusId", true, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 6);
			this.AddElementFieldMapping("RawTestDataEntity", "NoteId", "NoteId", true, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 7);
			this.AddElementFieldMapping("RawTestDataEntity", "CompanyId", "CompanyId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 8);
			this.AddElementFieldMapping("RawTestDataEntity", "PsychologistId", "PsychologistId", true, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 9);
			this.AddElementFieldMapping("RawTestDataEntity", "RecipientName", "RecipientName", true, "VarChar", 100, 0, 0, false, "", null, typeof(System.String), 10);
		}

		/// <summary>Inits RawTestDataStatusEntity's mappings</summary>
		private void InitRawTestDataStatusEntityMappings()
		{
			this.AddElementMapping("RawTestDataStatusEntity", @"PsychologicalServices", @"dbo", "RawTestDataStatuses", 4, 0);
			this.AddElementFieldMapping("RawTestDataStatusEntity", "RawTestDataStatusId", "RawTestDataStatusId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("RawTestDataStatusEntity", "Name", "Name", false, "NVarChar", 50, 0, 0, false, "", null, typeof(System.String), 1);
			this.AddElementFieldMapping("RawTestDataStatusEntity", "IsActive", "IsActive", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 2);
			this.AddElementFieldMapping("RawTestDataStatusEntity", "CanInvoice", "CanInvoice", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 3);
		}

		/// <summary>Inits ReferralSourceEntity's mappings</summary>
		private void InitReferralSourceEntityMappings()
		{
			this.AddElementMapping("ReferralSourceEntity", @"PsychologicalServices", @"dbo", "ReferralSources", 6, 0);
			this.AddElementFieldMapping("ReferralSourceEntity", "ReferralSourceId", "ReferralSourceId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("ReferralSourceEntity", "Name", "Name", false, "NVarChar", 100, 0, 0, false, "", null, typeof(System.String), 1);
			this.AddElementFieldMapping("ReferralSourceEntity", "ReferralSourceTypeId", "ReferralSourceTypeId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 2);
			this.AddElementFieldMapping("ReferralSourceEntity", "IsActive", "IsActive", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 3);
			this.AddElementFieldMapping("ReferralSourceEntity", "AddressId", "AddressId", true, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 4);
			this.AddElementFieldMapping("ReferralSourceEntity", "InvoicesContactEmail", "InvoicesContactEmail", true, "NVarChar", 4000, 0, 0, false, "", null, typeof(System.String), 5);
		}

		/// <summary>Inits ReferralSourceInvoiceConfigurationEntity's mappings</summary>
		private void InitReferralSourceInvoiceConfigurationEntityMappings()
		{
			this.AddElementMapping("ReferralSourceInvoiceConfigurationEntity", @"PsychologicalServices", @"dbo", "ReferralSourceInvoiceConfiguration", 6, 0);
			this.AddElementFieldMapping("ReferralSourceInvoiceConfigurationEntity", "ReferralSourceId", "ReferralSourceId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("ReferralSourceInvoiceConfigurationEntity", "CompanyId", "CompanyId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 1);
			this.AddElementFieldMapping("ReferralSourceInvoiceConfigurationEntity", "LargeFileSize", "LargeFileSize", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 2);
			this.AddElementFieldMapping("ReferralSourceInvoiceConfigurationEntity", "LargeFileFee", "LargeFileFee", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 3);
			this.AddElementFieldMapping("ReferralSourceInvoiceConfigurationEntity", "ExtraReportFee", "ExtraReportFee", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 4);
			this.AddElementFieldMapping("ReferralSourceInvoiceConfigurationEntity", "CompletionFeeAmount", "CompletionFeeAmount", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 5);
		}

		/// <summary>Inits ReferralSourceTypeEntity's mappings</summary>
		private void InitReferralSourceTypeEntityMappings()
		{
			this.AddElementMapping("ReferralSourceTypeEntity", @"PsychologicalServices", @"dbo", "ReferralSourceTypes", 3, 0);
			this.AddElementFieldMapping("ReferralSourceTypeEntity", "ReferralSourceTypeId", "ReferralSourceTypeId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("ReferralSourceTypeEntity", "Name", "Name", false, "NVarChar", 50, 0, 0, false, "", null, typeof(System.String), 1);
			this.AddElementFieldMapping("ReferralSourceTypeEntity", "IsActive", "IsActive", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 2);
		}

		/// <summary>Inits ReferralTypeEntity's mappings</summary>
		private void InitReferralTypeEntityMappings()
		{
			this.AddElementMapping("ReferralTypeEntity", @"PsychologicalServices", @"dbo", "ReferralTypes", 3, 0);
			this.AddElementFieldMapping("ReferralTypeEntity", "ReferralTypeId", "ReferralTypeId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("ReferralTypeEntity", "Name", "Name", false, "NVarChar", 50, 0, 0, false, "", null, typeof(System.String), 1);
			this.AddElementFieldMapping("ReferralTypeEntity", "IsActive", "IsActive", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 2);
		}

		/// <summary>Inits ReferralTypeIssueInDisputeEntity's mappings</summary>
		private void InitReferralTypeIssueInDisputeEntityMappings()
		{
			this.AddElementMapping("ReferralTypeIssueInDisputeEntity", @"PsychologicalServices", @"dbo", "ReferralTypeIssuesInDispute", 2, 0);
			this.AddElementFieldMapping("ReferralTypeIssueInDisputeEntity", "ReferralTypeId", "ReferralTypeId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("ReferralTypeIssueInDisputeEntity", "IssueInDisputeId", "IssueInDisputeId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 1);
		}

		/// <summary>Inits ReportStatusEntity's mappings</summary>
		private void InitReportStatusEntityMappings()
		{
			this.AddElementMapping("ReportStatusEntity", @"PsychologicalServices", @"dbo", "ReportStatuses", 3, 0);
			this.AddElementFieldMapping("ReportStatusEntity", "ReportStatusId", "ReportStatusId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("ReportStatusEntity", "Name", "Name", false, "NVarChar", 50, 0, 0, false, "", null, typeof(System.String), 1);
			this.AddElementFieldMapping("ReportStatusEntity", "IsActive", "IsActive", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 2);
		}

		/// <summary>Inits ReportTypeEntity's mappings</summary>
		private void InitReportTypeEntityMappings()
		{
			this.AddElementMapping("ReportTypeEntity", @"PsychologicalServices", @"dbo", "ReportTypes", 3, 0);
			this.AddElementFieldMapping("ReportTypeEntity", "ReportTypeId", "ReportTypeId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("ReportTypeEntity", "Name", "Name", false, "NVarChar", 50, 0, 0, false, "", null, typeof(System.String), 1);
			this.AddElementFieldMapping("ReportTypeEntity", "IsActive", "IsActive", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 2);
		}

		/// <summary>Inits RightEntity's mappings</summary>
		private void InitRightEntityMappings()
		{
			this.AddElementMapping("RightEntity", @"PsychologicalServices", @"dbo", "Rights", 4, 0);
			this.AddElementFieldMapping("RightEntity", "RightId", "RightId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("RightEntity", "Name", "Name", false, "NVarChar", 50, 0, 0, false, "", null, typeof(System.String), 1);
			this.AddElementFieldMapping("RightEntity", "Description", "Description", true, "NVarChar", 100, 0, 0, false, "", null, typeof(System.String), 2);
			this.AddElementFieldMapping("RightEntity", "IsActive", "IsActive", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 3);
		}

		/// <summary>Inits RoleEntity's mappings</summary>
		private void InitRoleEntityMappings()
		{
			this.AddElementMapping("RoleEntity", @"PsychologicalServices", @"dbo", "Roles", 4, 0);
			this.AddElementFieldMapping("RoleEntity", "RoleId", "RoleId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("RoleEntity", "Name", "Name", false, "NVarChar", 50, 0, 0, false, "", null, typeof(System.String), 1);
			this.AddElementFieldMapping("RoleEntity", "Description", "Description", true, "NVarChar", 100, 0, 0, false, "", null, typeof(System.String), 2);
			this.AddElementFieldMapping("RoleEntity", "IsActive", "IsActive", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 3);
		}

		/// <summary>Inits RoleRightEntity's mappings</summary>
		private void InitRoleRightEntityMappings()
		{
			this.AddElementMapping("RoleRightEntity", @"PsychologicalServices", @"dbo", "RoleRights", 2, 0);
			this.AddElementFieldMapping("RoleRightEntity", "RoleId", "RoleId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("RoleRightEntity", "RightId", "RightId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 1);
		}

		/// <summary>Inits UserEntity's mappings</summary>
		private void InitUserEntityMappings()
		{
			this.AddElementMapping("UserEntity", @"PsychologicalServices", @"dbo", "Users", 9, 0);
			this.AddElementFieldMapping("UserEntity", "UserId", "UserId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("UserEntity", "FirstName", "FirstName", false, "NVarChar", 100, 0, 0, false, "", null, typeof(System.String), 1);
			this.AddElementFieldMapping("UserEntity", "LastName", "LastName", false, "NVarChar", 100, 0, 0, false, "", null, typeof(System.String), 2);
			this.AddElementFieldMapping("UserEntity", "Email", "Email", false, "NVarChar", 100, 0, 0, false, "", null, typeof(System.String), 3);
			this.AddElementFieldMapping("UserEntity", "IsActive", "IsActive", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 4);
			this.AddElementFieldMapping("UserEntity", "CompanyId", "CompanyId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 5);
			this.AddElementFieldMapping("UserEntity", "AddressId", "AddressId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 6);
			this.AddElementFieldMapping("UserEntity", "DateInactivated", "DateInactivated", true, "DateTimeOffset", 0, 0, 0, false, "", null, typeof(System.DateTimeOffset), 7);
			this.AddElementFieldMapping("UserEntity", "SpinnerId", "SpinnerId", true, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 8);
		}

		/// <summary>Inits UserNoteEntity's mappings</summary>
		private void InitUserNoteEntityMappings()
		{
			this.AddElementMapping("UserNoteEntity", @"PsychologicalServices", @"dbo", "UserNotes", 2, 0);
			this.AddElementFieldMapping("UserNoteEntity", "NoteId", "NoteId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("UserNoteEntity", "UserId", "UserId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 1);
		}

		/// <summary>Inits UserRoleEntity's mappings</summary>
		private void InitUserRoleEntityMappings()
		{
			this.AddElementMapping("UserRoleEntity", @"PsychologicalServices", @"dbo", "UserRoles", 2, 0);
			this.AddElementFieldMapping("UserRoleEntity", "UserId", "UserId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("UserRoleEntity", "RoleId", "RoleId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 1);
		}

		/// <summary>Inits UserTravelFeeEntity's mappings</summary>
		private void InitUserTravelFeeEntityMappings()
		{
			this.AddElementMapping("UserTravelFeeEntity", @"PsychologicalServices", @"dbo", "UserTravelFees", 3, 0);
			this.AddElementFieldMapping("UserTravelFeeEntity", "UserId", "UserId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("UserTravelFeeEntity", "CityId", "CityId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 1);
			this.AddElementFieldMapping("UserTravelFeeEntity", "Amount", "Amount", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 2);
		}

		/// <summary>Inits UserUnavailabilityEntity's mappings</summary>
		private void InitUserUnavailabilityEntityMappings()
		{
			this.AddElementMapping("UserUnavailabilityEntity", @"PsychologicalServices", @"dbo", "UserUnavailabilities", 4, 0);
			this.AddElementFieldMapping("UserUnavailabilityEntity", "Id", "Id", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 0);
			this.AddElementFieldMapping("UserUnavailabilityEntity", "UserId", "UserId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 1);
			this.AddElementFieldMapping("UserUnavailabilityEntity", "StartDate", "StartDate", false, "DateTimeOffset", 0, 0, 0, false, "", null, typeof(System.DateTimeOffset), 2);
			this.AddElementFieldMapping("UserUnavailabilityEntity", "EndDate", "EndDate", false, "DateTimeOffset", 0, 0, 0, false, "", null, typeof(System.DateTimeOffset), 3);
		}

	}
}
