//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.3.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
// Templates version: 
//////////////////////////////////////////////////////////////
using System;
using System.Collections.Generic;
using PsychologicalServices.Data.EntityClasses;
using PsychologicalServices.Data.HelperClasses;
using PsychologicalServices.Data.RelationClasses;
using SD.LLBLGen.Pro.ORMSupportClasses;

namespace PsychologicalServices.Data.FactoryClasses
{
	
	// __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
	// __LLBLGENPRO_USER_CODE_REGION_END
	
	/// <summary>general base class for the generated factories</summary>
	[Serializable]
	public partial class EntityFactoryBase2<TEntity> : EntityFactoryCore2
		where TEntity : EntityBase2, IEntity2
	{
		private readonly PsychologicalServices.Data.EntityType _typeOfEntity;
		private readonly bool _isInHierarchy;
		
		/// <summary>CTor</summary>
		/// <param name="entityName">Name of the entity.</param>
		/// <param name="typeOfEntity">The type of entity.</param>
		/// <param name="isInHierarchy">If true, the entity of this factory is in an inheritance hierarchy, false otherwise</param>
		public EntityFactoryBase2(string entityName, PsychologicalServices.Data.EntityType typeOfEntity, bool isInHierarchy) : base(entityName)
		{
			_typeOfEntity = typeOfEntity;
			_isInHierarchy = isInHierarchy;
		}
		
		/// <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields2 object for the entity to create.</summary>
		/// <returns>Empty IEntityFields2 object.</returns>
		public override IEntityFields2 CreateFields()
		{
			return EntityFieldsFactory.CreateEntityFieldsObject(_typeOfEntity);
		}
		
		/// <summary>Creates a new entity instance using the GeneralEntityFactory in the generated code, using the passed in entitytype value</summary>
		/// <param name="entityTypeValue">The entity type value of the entity to create an instance for.</param>
		/// <returns>new IEntity instance</returns>
		public override IEntity2 CreateEntityFromEntityTypeValue(int entityTypeValue)
		{
			return GeneralEntityFactory.Create((PsychologicalServices.Data.EntityType)entityTypeValue);
		}

		/// <summary>Creates the relations collection to the entity to join all targets so this entity can be fetched. </summary>
		/// <param name="objectAlias">The object alias to use for the elements in the relations.</param>
		/// <returns>null if the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to join all targets together to fetch all subtypes of this entity and this entity itself</returns>
		public override IRelationCollection CreateHierarchyRelations(string objectAlias) 
		{
			return InheritanceInfoProviderSingleton.GetInstance().GetHierarchyRelations(this.ForEntityName, objectAlias);
		}

		/// <summary>This method retrieves, using the InheritanceInfoprovider, the factory for the entity represented by the values passed in.</summary>
		/// <param name="fieldValues">Field values read from the db, to determine which factory to return, based on the field values passed in.</param>
		/// <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		/// <returns>the factory for the entity which is represented by the values passed in.</returns>
		public override IEntityFactory2 GetEntityFactory(object[] fieldValues, Dictionary<string, int> entityFieldStartIndexesPerEntity) 
		{
			IEntityFactory2 toReturn = (IEntityFactory2)InheritanceInfoProviderSingleton.GetInstance().GetEntityFactory(this.ForEntityName, fieldValues, entityFieldStartIndexesPerEntity);
			if(toReturn == null)
			{
				toReturn = this;
			}
			return toReturn;
		}
		
		/// <summary>Gets a predicateexpression which filters on the entity with type belonging to this factory.</summary>
		/// <param name="negate">Flag to produce a NOT filter, (true), or a normal filter (false). </param>
		/// <param name="objectAlias">The object alias to use for the predicate(s).</param>
		/// <returns>ready to use predicateexpression, or an empty predicate expression if the belonging entity isn't a hierarchical type.</returns>
		public override IPredicateExpression GetEntityTypeFilter(bool negate, string objectAlias) 
		{
			return InheritanceInfoProviderSingleton.GetInstance().GetEntityTypeFilter(this.ForEntityName, objectAlias, negate);
		}
						
		/// <summary>Creates a new generic EntityCollection(Of T) for the entity which this factory belongs to.</summary>
		/// <returns>ready to use generic EntityCollection(Of T) with this factory set as the factory</returns>
		public override IEntityCollection2 CreateEntityCollection()
		{
			return new EntityCollection<TEntity>(this);
		}
		
		/// <summary>Creates the hierarchy fields for the entity to which this factory belongs.</summary>
		/// <returns>IEntityFields2 object with the fields of all the entities in teh hierarchy of this entity or the fields of this entity if the entity isn't in a hierarchy.</returns>
		public override IEntityFields2 CreateHierarchyFields() 
		{
			return _isInHierarchy ? new EntityFields2(InheritanceInfoProviderSingleton.GetInstance().GetHierarchyFields(this.ForEntityName), InheritanceInfoProviderSingleton.GetInstance(), null) : base.CreateHierarchyFields();
		}
	}

	/// <summary>Factory to create new, empty AddressEntity objects.</summary>
	[Serializable]
	public partial class AddressEntityFactory : EntityFactoryBase2<AddressEntity> {
		/// <summary>CTor</summary>
		public AddressEntityFactory() : base("AddressEntity", PsychologicalServices.Data.EntityType.AddressEntity, false) { }
		
		/// <summary>Creates a new AddressEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new AddressEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewAddressUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty AddressAddressTypeEntity objects.</summary>
	[Serializable]
	public partial class AddressAddressTypeEntityFactory : EntityFactoryBase2<AddressAddressTypeEntity> {
		/// <summary>CTor</summary>
		public AddressAddressTypeEntityFactory() : base("AddressAddressTypeEntity", PsychologicalServices.Data.EntityType.AddressAddressTypeEntity, false) { }
		
		/// <summary>Creates a new AddressAddressTypeEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new AddressAddressTypeEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewAddressAddressTypeUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty AddressTypeEntity objects.</summary>
	[Serializable]
	public partial class AddressTypeEntityFactory : EntityFactoryBase2<AddressTypeEntity> {
		/// <summary>CTor</summary>
		public AddressTypeEntityFactory() : base("AddressTypeEntity", PsychologicalServices.Data.EntityType.AddressTypeEntity, false) { }
		
		/// <summary>Creates a new AddressTypeEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new AddressTypeEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewAddressTypeUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty AppointmentEntity objects.</summary>
	[Serializable]
	public partial class AppointmentEntityFactory : EntityFactoryBase2<AppointmentEntity> {
		/// <summary>CTor</summary>
		public AppointmentEntityFactory() : base("AppointmentEntity", PsychologicalServices.Data.EntityType.AppointmentEntity, false) { }
		
		/// <summary>Creates a new AppointmentEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new AppointmentEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewAppointmentUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty AppointmentAttributeEntity objects.</summary>
	[Serializable]
	public partial class AppointmentAttributeEntityFactory : EntityFactoryBase2<AppointmentAttributeEntity> {
		/// <summary>CTor</summary>
		public AppointmentAttributeEntityFactory() : base("AppointmentAttributeEntity", PsychologicalServices.Data.EntityType.AppointmentAttributeEntity, false) { }
		
		/// <summary>Creates a new AppointmentAttributeEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new AppointmentAttributeEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewAppointmentAttributeUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty AppointmentSequenceEntity objects.</summary>
	[Serializable]
	public partial class AppointmentSequenceEntityFactory : EntityFactoryBase2<AppointmentSequenceEntity> {
		/// <summary>CTor</summary>
		public AppointmentSequenceEntityFactory() : base("AppointmentSequenceEntity", PsychologicalServices.Data.EntityType.AppointmentSequenceEntity, false) { }
		
		/// <summary>Creates a new AppointmentSequenceEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new AppointmentSequenceEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewAppointmentSequenceUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty AppointmentStatusEntity objects.</summary>
	[Serializable]
	public partial class AppointmentStatusEntityFactory : EntityFactoryBase2<AppointmentStatusEntity> {
		/// <summary>CTor</summary>
		public AppointmentStatusEntityFactory() : base("AppointmentStatusEntity", PsychologicalServices.Data.EntityType.AppointmentStatusEntity, false) { }
		
		/// <summary>Creates a new AppointmentStatusEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new AppointmentStatusEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewAppointmentStatusUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty AppointmentStatusInvoiceRateEntity objects.</summary>
	[Serializable]
	public partial class AppointmentStatusInvoiceRateEntityFactory : EntityFactoryBase2<AppointmentStatusInvoiceRateEntity> {
		/// <summary>CTor</summary>
		public AppointmentStatusInvoiceRateEntityFactory() : base("AppointmentStatusInvoiceRateEntity", PsychologicalServices.Data.EntityType.AppointmentStatusInvoiceRateEntity, false) { }
		
		/// <summary>Creates a new AppointmentStatusInvoiceRateEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new AppointmentStatusInvoiceRateEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewAppointmentStatusInvoiceRateUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty ArbitrationEntity objects.</summary>
	[Serializable]
	public partial class ArbitrationEntityFactory : EntityFactoryBase2<ArbitrationEntity> {
		/// <summary>CTor</summary>
		public ArbitrationEntityFactory() : base("ArbitrationEntity", PsychologicalServices.Data.EntityType.ArbitrationEntity, false) { }
		
		/// <summary>Creates a new ArbitrationEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new ArbitrationEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewArbitrationUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty ArbitrationClaimEntity objects.</summary>
	[Serializable]
	public partial class ArbitrationClaimEntityFactory : EntityFactoryBase2<ArbitrationClaimEntity> {
		/// <summary>CTor</summary>
		public ArbitrationClaimEntityFactory() : base("ArbitrationClaimEntity", PsychologicalServices.Data.EntityType.ArbitrationClaimEntity, false) { }
		
		/// <summary>Creates a new ArbitrationClaimEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new ArbitrationClaimEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewArbitrationClaimUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty ArbitrationStatusEntity objects.</summary>
	[Serializable]
	public partial class ArbitrationStatusEntityFactory : EntityFactoryBase2<ArbitrationStatusEntity> {
		/// <summary>CTor</summary>
		public ArbitrationStatusEntityFactory() : base("ArbitrationStatusEntity", PsychologicalServices.Data.EntityType.ArbitrationStatusEntity, false) { }
		
		/// <summary>Creates a new ArbitrationStatusEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new ArbitrationStatusEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewArbitrationStatusUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty AssessmentEntity objects.</summary>
	[Serializable]
	public partial class AssessmentEntityFactory : EntityFactoryBase2<AssessmentEntity> {
		/// <summary>CTor</summary>
		public AssessmentEntityFactory() : base("AssessmentEntity", PsychologicalServices.Data.EntityType.AssessmentEntity, false) { }
		
		/// <summary>Creates a new AssessmentEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new AssessmentEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewAssessmentUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty AssessmentAttributeEntity objects.</summary>
	[Serializable]
	public partial class AssessmentAttributeEntityFactory : EntityFactoryBase2<AssessmentAttributeEntity> {
		/// <summary>CTor</summary>
		public AssessmentAttributeEntityFactory() : base("AssessmentAttributeEntity", PsychologicalServices.Data.EntityType.AssessmentAttributeEntity, false) { }
		
		/// <summary>Creates a new AssessmentAttributeEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new AssessmentAttributeEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewAssessmentAttributeUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty AssessmentClaimEntity objects.</summary>
	[Serializable]
	public partial class AssessmentClaimEntityFactory : EntityFactoryBase2<AssessmentClaimEntity> {
		/// <summary>CTor</summary>
		public AssessmentClaimEntityFactory() : base("AssessmentClaimEntity", PsychologicalServices.Data.EntityType.AssessmentClaimEntity, false) { }
		
		/// <summary>Creates a new AssessmentClaimEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new AssessmentClaimEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewAssessmentClaimUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty AssessmentColorEntity objects.</summary>
	[Serializable]
	public partial class AssessmentColorEntityFactory : EntityFactoryBase2<AssessmentColorEntity> {
		/// <summary>CTor</summary>
		public AssessmentColorEntityFactory() : base("AssessmentColorEntity", PsychologicalServices.Data.EntityType.AssessmentColorEntity, false) { }
		
		/// <summary>Creates a new AssessmentColorEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new AssessmentColorEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewAssessmentColorUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty AssessmentMedRehabEntity objects.</summary>
	[Serializable]
	public partial class AssessmentMedRehabEntityFactory : EntityFactoryBase2<AssessmentMedRehabEntity> {
		/// <summary>CTor</summary>
		public AssessmentMedRehabEntityFactory() : base("AssessmentMedRehabEntity", PsychologicalServices.Data.EntityType.AssessmentMedRehabEntity, false) { }
		
		/// <summary>Creates a new AssessmentMedRehabEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new AssessmentMedRehabEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewAssessmentMedRehabUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty AssessmentNoteEntity objects.</summary>
	[Serializable]
	public partial class AssessmentNoteEntityFactory : EntityFactoryBase2<AssessmentNoteEntity> {
		/// <summary>CTor</summary>
		public AssessmentNoteEntityFactory() : base("AssessmentNoteEntity", PsychologicalServices.Data.EntityType.AssessmentNoteEntity, false) { }
		
		/// <summary>Creates a new AssessmentNoteEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new AssessmentNoteEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewAssessmentNoteUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty AssessmentReportEntity objects.</summary>
	[Serializable]
	public partial class AssessmentReportEntityFactory : EntityFactoryBase2<AssessmentReportEntity> {
		/// <summary>CTor</summary>
		public AssessmentReportEntityFactory() : base("AssessmentReportEntity", PsychologicalServices.Data.EntityType.AssessmentReportEntity, false) { }
		
		/// <summary>Creates a new AssessmentReportEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new AssessmentReportEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewAssessmentReportUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty AssessmentReportIssueInDisputeEntity objects.</summary>
	[Serializable]
	public partial class AssessmentReportIssueInDisputeEntityFactory : EntityFactoryBase2<AssessmentReportIssueInDisputeEntity> {
		/// <summary>CTor</summary>
		public AssessmentReportIssueInDisputeEntityFactory() : base("AssessmentReportIssueInDisputeEntity", PsychologicalServices.Data.EntityType.AssessmentReportIssueInDisputeEntity, false) { }
		
		/// <summary>Creates a new AssessmentReportIssueInDisputeEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new AssessmentReportIssueInDisputeEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewAssessmentReportIssueInDisputeUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty AssessmentTestingResultEntity objects.</summary>
	[Serializable]
	public partial class AssessmentTestingResultEntityFactory : EntityFactoryBase2<AssessmentTestingResultEntity> {
		/// <summary>CTor</summary>
		public AssessmentTestingResultEntityFactory() : base("AssessmentTestingResultEntity", PsychologicalServices.Data.EntityType.AssessmentTestingResultEntity, false) { }
		
		/// <summary>Creates a new AssessmentTestingResultEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new AssessmentTestingResultEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewAssessmentTestingResultUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty AssessmentTypeEntity objects.</summary>
	[Serializable]
	public partial class AssessmentTypeEntityFactory : EntityFactoryBase2<AssessmentTypeEntity> {
		/// <summary>CTor</summary>
		public AssessmentTypeEntityFactory() : base("AssessmentTypeEntity", PsychologicalServices.Data.EntityType.AssessmentTypeEntity, false) { }
		
		/// <summary>Creates a new AssessmentTypeEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new AssessmentTypeEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewAssessmentTypeUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty AssessmentTypeAttributeTypeEntity objects.</summary>
	[Serializable]
	public partial class AssessmentTypeAttributeTypeEntityFactory : EntityFactoryBase2<AssessmentTypeAttributeTypeEntity> {
		/// <summary>CTor</summary>
		public AssessmentTypeAttributeTypeEntityFactory() : base("AssessmentTypeAttributeTypeEntity", PsychologicalServices.Data.EntityType.AssessmentTypeAttributeTypeEntity, false) { }
		
		/// <summary>Creates a new AssessmentTypeAttributeTypeEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new AssessmentTypeAttributeTypeEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewAssessmentTypeAttributeTypeUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty AssessmentTypeInvoiceAmountEntity objects.</summary>
	[Serializable]
	public partial class AssessmentTypeInvoiceAmountEntityFactory : EntityFactoryBase2<AssessmentTypeInvoiceAmountEntity> {
		/// <summary>CTor</summary>
		public AssessmentTypeInvoiceAmountEntityFactory() : base("AssessmentTypeInvoiceAmountEntity", PsychologicalServices.Data.EntityType.AssessmentTypeInvoiceAmountEntity, false) { }
		
		/// <summary>Creates a new AssessmentTypeInvoiceAmountEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new AssessmentTypeInvoiceAmountEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewAssessmentTypeInvoiceAmountUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty AssessmentTypeReportTypeEntity objects.</summary>
	[Serializable]
	public partial class AssessmentTypeReportTypeEntityFactory : EntityFactoryBase2<AssessmentTypeReportTypeEntity> {
		/// <summary>CTor</summary>
		public AssessmentTypeReportTypeEntityFactory() : base("AssessmentTypeReportTypeEntity", PsychologicalServices.Data.EntityType.AssessmentTypeReportTypeEntity, false) { }
		
		/// <summary>Creates a new AssessmentTypeReportTypeEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new AssessmentTypeReportTypeEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewAssessmentTypeReportTypeUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty AttributeEntity objects.</summary>
	[Serializable]
	public partial class AttributeEntityFactory : EntityFactoryBase2<AttributeEntity> {
		/// <summary>CTor</summary>
		public AttributeEntityFactory() : base("AttributeEntity", PsychologicalServices.Data.EntityType.AttributeEntity, false) { }
		
		/// <summary>Creates a new AttributeEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new AttributeEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewAttributeUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty AttributeTypeEntity objects.</summary>
	[Serializable]
	public partial class AttributeTypeEntityFactory : EntityFactoryBase2<AttributeTypeEntity> {
		/// <summary>CTor</summary>
		public AttributeTypeEntityFactory() : base("AttributeTypeEntity", PsychologicalServices.Data.EntityType.AttributeTypeEntity, false) { }
		
		/// <summary>Creates a new AttributeTypeEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new AttributeTypeEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewAttributeTypeUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty CalendarNoteEntity objects.</summary>
	[Serializable]
	public partial class CalendarNoteEntityFactory : EntityFactoryBase2<CalendarNoteEntity> {
		/// <summary>CTor</summary>
		public CalendarNoteEntityFactory() : base("CalendarNoteEntity", PsychologicalServices.Data.EntityType.CalendarNoteEntity, false) { }
		
		/// <summary>Creates a new CalendarNoteEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new CalendarNoteEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewCalendarNoteUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty CityEntity objects.</summary>
	[Serializable]
	public partial class CityEntityFactory : EntityFactoryBase2<CityEntity> {
		/// <summary>CTor</summary>
		public CityEntityFactory() : base("CityEntity", PsychologicalServices.Data.EntityType.CityEntity, false) { }
		
		/// <summary>Creates a new CityEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new CityEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewCityUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty ClaimEntity objects.</summary>
	[Serializable]
	public partial class ClaimEntityFactory : EntityFactoryBase2<ClaimEntity> {
		/// <summary>CTor</summary>
		public ClaimEntityFactory() : base("ClaimEntity", PsychologicalServices.Data.EntityType.ClaimEntity, false) { }
		
		/// <summary>Creates a new ClaimEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new ClaimEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewClaimUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty ClaimantEntity objects.</summary>
	[Serializable]
	public partial class ClaimantEntityFactory : EntityFactoryBase2<ClaimantEntity> {
		/// <summary>CTor</summary>
		public ClaimantEntityFactory() : base("ClaimantEntity", PsychologicalServices.Data.EntityType.ClaimantEntity, false) { }
		
		/// <summary>Creates a new ClaimantEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new ClaimantEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewClaimantUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty ColorEntity objects.</summary>
	[Serializable]
	public partial class ColorEntityFactory : EntityFactoryBase2<ColorEntity> {
		/// <summary>CTor</summary>
		public ColorEntityFactory() : base("ColorEntity", PsychologicalServices.Data.EntityType.ColorEntity, false) { }
		
		/// <summary>Creates a new ColorEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new ColorEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewColorUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty CompanyEntity objects.</summary>
	[Serializable]
	public partial class CompanyEntityFactory : EntityFactoryBase2<CompanyEntity> {
		/// <summary>CTor</summary>
		public CompanyEntityFactory() : base("CompanyEntity", PsychologicalServices.Data.EntityType.CompanyEntity, false) { }
		
		/// <summary>Creates a new CompanyEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new CompanyEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewCompanyUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty CompanyAttributeEntity objects.</summary>
	[Serializable]
	public partial class CompanyAttributeEntityFactory : EntityFactoryBase2<CompanyAttributeEntity> {
		/// <summary>CTor</summary>
		public CompanyAttributeEntityFactory() : base("CompanyAttributeEntity", PsychologicalServices.Data.EntityType.CompanyAttributeEntity, false) { }
		
		/// <summary>Creates a new CompanyAttributeEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new CompanyAttributeEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewCompanyAttributeUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty ConsultingAgreementEntity objects.</summary>
	[Serializable]
	public partial class ConsultingAgreementEntityFactory : EntityFactoryBase2<ConsultingAgreementEntity> {
		/// <summary>CTor</summary>
		public ConsultingAgreementEntityFactory() : base("ConsultingAgreementEntity", PsychologicalServices.Data.EntityType.ConsultingAgreementEntity, false) { }
		
		/// <summary>Creates a new ConsultingAgreementEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new ConsultingAgreementEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewConsultingAgreementUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty ContactEntity objects.</summary>
	[Serializable]
	public partial class ContactEntityFactory : EntityFactoryBase2<ContactEntity> {
		/// <summary>CTor</summary>
		public ContactEntityFactory() : base("ContactEntity", PsychologicalServices.Data.EntityType.ContactEntity, false) { }
		
		/// <summary>Creates a new ContactEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new ContactEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewContactUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty ContactTypeEntity objects.</summary>
	[Serializable]
	public partial class ContactTypeEntityFactory : EntityFactoryBase2<ContactTypeEntity> {
		/// <summary>CTor</summary>
		public ContactTypeEntityFactory() : base("ContactTypeEntity", PsychologicalServices.Data.EntityType.ContactTypeEntity, false) { }
		
		/// <summary>Creates a new ContactTypeEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new ContactTypeEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewContactTypeUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty CredibilityEntity objects.</summary>
	[Serializable]
	public partial class CredibilityEntityFactory : EntityFactoryBase2<CredibilityEntity> {
		/// <summary>CTor</summary>
		public CredibilityEntityFactory() : base("CredibilityEntity", PsychologicalServices.Data.EntityType.CredibilityEntity, false) { }
		
		/// <summary>Creates a new CredibilityEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new CredibilityEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewCredibilityUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty DiagnosisFoundResponseEntity objects.</summary>
	[Serializable]
	public partial class DiagnosisFoundResponseEntityFactory : EntityFactoryBase2<DiagnosisFoundResponseEntity> {
		/// <summary>CTor</summary>
		public DiagnosisFoundResponseEntityFactory() : base("DiagnosisFoundResponseEntity", PsychologicalServices.Data.EntityType.DiagnosisFoundResponseEntity, false) { }
		
		/// <summary>Creates a new DiagnosisFoundResponseEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new DiagnosisFoundResponseEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewDiagnosisFoundResponseUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty DocumentEntity objects.</summary>
	[Serializable]
	public partial class DocumentEntityFactory : EntityFactoryBase2<DocumentEntity> {
		/// <summary>CTor</summary>
		public DocumentEntityFactory() : base("DocumentEntity", PsychologicalServices.Data.EntityType.DocumentEntity, false) { }
		
		/// <summary>Creates a new DocumentEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new DocumentEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewDocumentUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty EmployerEntity objects.</summary>
	[Serializable]
	public partial class EmployerEntityFactory : EntityFactoryBase2<EmployerEntity> {
		/// <summary>CTor</summary>
		public EmployerEntityFactory() : base("EmployerEntity", PsychologicalServices.Data.EntityType.EmployerEntity, false) { }
		
		/// <summary>Creates a new EmployerEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new EmployerEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewEmployerUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty EmployerTypeEntity objects.</summary>
	[Serializable]
	public partial class EmployerTypeEntityFactory : EntityFactoryBase2<EmployerTypeEntity> {
		/// <summary>CTor</summary>
		public EmployerTypeEntityFactory() : base("EmployerTypeEntity", PsychologicalServices.Data.EntityType.EmployerTypeEntity, false) { }
		
		/// <summary>Creates a new EmployerTypeEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new EmployerTypeEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewEmployerTypeUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty EventEntity objects.</summary>
	[Serializable]
	public partial class EventEntityFactory : EntityFactoryBase2<EventEntity> {
		/// <summary>CTor</summary>
		public EventEntityFactory() : base("EventEntity", PsychologicalServices.Data.EntityType.EventEntity, false) { }
		
		/// <summary>Creates a new EventEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new EventEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewEventUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty GoseAccidentTimeframeEntity objects.</summary>
	[Serializable]
	public partial class GoseAccidentTimeframeEntityFactory : EntityFactoryBase2<GoseAccidentTimeframeEntity> {
		/// <summary>CTor</summary>
		public GoseAccidentTimeframeEntityFactory() : base("GoseAccidentTimeframeEntity", PsychologicalServices.Data.EntityType.GoseAccidentTimeframeEntity, false) { }
		
		/// <summary>Creates a new GoseAccidentTimeframeEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new GoseAccidentTimeframeEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewGoseAccidentTimeframeUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty GoseFamilyAndFriendshipsDisruptionLevelEntity objects.</summary>
	[Serializable]
	public partial class GoseFamilyAndFriendshipsDisruptionLevelEntityFactory : EntityFactoryBase2<GoseFamilyAndFriendshipsDisruptionLevelEntity> {
		/// <summary>CTor</summary>
		public GoseFamilyAndFriendshipsDisruptionLevelEntityFactory() : base("GoseFamilyAndFriendshipsDisruptionLevelEntity", PsychologicalServices.Data.EntityType.GoseFamilyAndFriendshipsDisruptionLevelEntity, false) { }
		
		/// <summary>Creates a new GoseFamilyAndFriendshipsDisruptionLevelEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new GoseFamilyAndFriendshipsDisruptionLevelEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewGoseFamilyAndFriendshipsDisruptionLevelUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty GoseInterviewEntity objects.</summary>
	[Serializable]
	public partial class GoseInterviewEntityFactory : EntityFactoryBase2<GoseInterviewEntity> {
		/// <summary>CTor</summary>
		public GoseInterviewEntityFactory() : base("GoseInterviewEntity", PsychologicalServices.Data.EntityType.GoseInterviewEntity, false) { }
		
		/// <summary>Creates a new GoseInterviewEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new GoseInterviewEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewGoseInterviewUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty GoseRespondentTypeEntity objects.</summary>
	[Serializable]
	public partial class GoseRespondentTypeEntityFactory : EntityFactoryBase2<GoseRespondentTypeEntity> {
		/// <summary>CTor</summary>
		public GoseRespondentTypeEntityFactory() : base("GoseRespondentTypeEntity", PsychologicalServices.Data.EntityType.GoseRespondentTypeEntity, false) { }
		
		/// <summary>Creates a new GoseRespondentTypeEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new GoseRespondentTypeEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewGoseRespondentTypeUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty GoseReturnToNormalLifeOutcomeFactorEntity objects.</summary>
	[Serializable]
	public partial class GoseReturnToNormalLifeOutcomeFactorEntityFactory : EntityFactoryBase2<GoseReturnToNormalLifeOutcomeFactorEntity> {
		/// <summary>CTor</summary>
		public GoseReturnToNormalLifeOutcomeFactorEntityFactory() : base("GoseReturnToNormalLifeOutcomeFactorEntity", PsychologicalServices.Data.EntityType.GoseReturnToNormalLifeOutcomeFactorEntity, false) { }
		
		/// <summary>Creates a new GoseReturnToNormalLifeOutcomeFactorEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new GoseReturnToNormalLifeOutcomeFactorEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewGoseReturnToNormalLifeOutcomeFactorUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty GoseSocialAndLeisureRestrictionExtentEntity objects.</summary>
	[Serializable]
	public partial class GoseSocialAndLeisureRestrictionExtentEntityFactory : EntityFactoryBase2<GoseSocialAndLeisureRestrictionExtentEntity> {
		/// <summary>CTor</summary>
		public GoseSocialAndLeisureRestrictionExtentEntityFactory() : base("GoseSocialAndLeisureRestrictionExtentEntity", PsychologicalServices.Data.EntityType.GoseSocialAndLeisureRestrictionExtentEntity, false) { }
		
		/// <summary>Creates a new GoseSocialAndLeisureRestrictionExtentEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new GoseSocialAndLeisureRestrictionExtentEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewGoseSocialAndLeisureRestrictionExtentUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty GoseWorkRestrictionLevelEntity objects.</summary>
	[Serializable]
	public partial class GoseWorkRestrictionLevelEntityFactory : EntityFactoryBase2<GoseWorkRestrictionLevelEntity> {
		/// <summary>CTor</summary>
		public GoseWorkRestrictionLevelEntityFactory() : base("GoseWorkRestrictionLevelEntity", PsychologicalServices.Data.EntityType.GoseWorkRestrictionLevelEntity, false) { }
		
		/// <summary>Creates a new GoseWorkRestrictionLevelEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new GoseWorkRestrictionLevelEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewGoseWorkRestrictionLevelUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty InvoiceEntity objects.</summary>
	[Serializable]
	public partial class InvoiceEntityFactory : EntityFactoryBase2<InvoiceEntity> {
		/// <summary>CTor</summary>
		public InvoiceEntityFactory() : base("InvoiceEntity", PsychologicalServices.Data.EntityType.InvoiceEntity, false) { }
		
		/// <summary>Creates a new InvoiceEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new InvoiceEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewInvoiceUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty InvoiceDocumentEntity objects.</summary>
	[Serializable]
	public partial class InvoiceDocumentEntityFactory : EntityFactoryBase2<InvoiceDocumentEntity> {
		/// <summary>CTor</summary>
		public InvoiceDocumentEntityFactory() : base("InvoiceDocumentEntity", PsychologicalServices.Data.EntityType.InvoiceDocumentEntity, false) { }
		
		/// <summary>Creates a new InvoiceDocumentEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new InvoiceDocumentEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewInvoiceDocumentUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty InvoiceDocumentSendLogEntity objects.</summary>
	[Serializable]
	public partial class InvoiceDocumentSendLogEntityFactory : EntityFactoryBase2<InvoiceDocumentSendLogEntity> {
		/// <summary>CTor</summary>
		public InvoiceDocumentSendLogEntityFactory() : base("InvoiceDocumentSendLogEntity", PsychologicalServices.Data.EntityType.InvoiceDocumentSendLogEntity, false) { }
		
		/// <summary>Creates a new InvoiceDocumentSendLogEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new InvoiceDocumentSendLogEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewInvoiceDocumentSendLogUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty InvoiceLineEntity objects.</summary>
	[Serializable]
	public partial class InvoiceLineEntityFactory : EntityFactoryBase2<InvoiceLineEntity> {
		/// <summary>CTor</summary>
		public InvoiceLineEntityFactory() : base("InvoiceLineEntity", PsychologicalServices.Data.EntityType.InvoiceLineEntity, false) { }
		
		/// <summary>Creates a new InvoiceLineEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new InvoiceLineEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewInvoiceLineUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty InvoiceLineGroupEntity objects.</summary>
	[Serializable]
	public partial class InvoiceLineGroupEntityFactory : EntityFactoryBase2<InvoiceLineGroupEntity> {
		/// <summary>CTor</summary>
		public InvoiceLineGroupEntityFactory() : base("InvoiceLineGroupEntity", PsychologicalServices.Data.EntityType.InvoiceLineGroupEntity, false) { }
		
		/// <summary>Creates a new InvoiceLineGroupEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new InvoiceLineGroupEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewInvoiceLineGroupUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty InvoiceLineGroupAppointmentEntity objects.</summary>
	[Serializable]
	public partial class InvoiceLineGroupAppointmentEntityFactory : EntityFactoryBase2<InvoiceLineGroupAppointmentEntity> {
		/// <summary>CTor</summary>
		public InvoiceLineGroupAppointmentEntityFactory() : base("InvoiceLineGroupAppointmentEntity", PsychologicalServices.Data.EntityType.InvoiceLineGroupAppointmentEntity, false) { }
		
		/// <summary>Creates a new InvoiceLineGroupAppointmentEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new InvoiceLineGroupAppointmentEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewInvoiceLineGroupAppointmentUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty InvoiceLineGroupArbitrationEntity objects.</summary>
	[Serializable]
	public partial class InvoiceLineGroupArbitrationEntityFactory : EntityFactoryBase2<InvoiceLineGroupArbitrationEntity> {
		/// <summary>CTor</summary>
		public InvoiceLineGroupArbitrationEntityFactory() : base("InvoiceLineGroupArbitrationEntity", PsychologicalServices.Data.EntityType.InvoiceLineGroupArbitrationEntity, false) { }
		
		/// <summary>Creates a new InvoiceLineGroupArbitrationEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new InvoiceLineGroupArbitrationEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewInvoiceLineGroupArbitrationUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty InvoiceLineGroupConsultingAgreementEntity objects.</summary>
	[Serializable]
	public partial class InvoiceLineGroupConsultingAgreementEntityFactory : EntityFactoryBase2<InvoiceLineGroupConsultingAgreementEntity> {
		/// <summary>CTor</summary>
		public InvoiceLineGroupConsultingAgreementEntityFactory() : base("InvoiceLineGroupConsultingAgreementEntity", PsychologicalServices.Data.EntityType.InvoiceLineGroupConsultingAgreementEntity, false) { }
		
		/// <summary>Creates a new InvoiceLineGroupConsultingAgreementEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new InvoiceLineGroupConsultingAgreementEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewInvoiceLineGroupConsultingAgreementUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty InvoiceLineGroupRawTestDataEntity objects.</summary>
	[Serializable]
	public partial class InvoiceLineGroupRawTestDataEntityFactory : EntityFactoryBase2<InvoiceLineGroupRawTestDataEntity> {
		/// <summary>CTor</summary>
		public InvoiceLineGroupRawTestDataEntityFactory() : base("InvoiceLineGroupRawTestDataEntity", PsychologicalServices.Data.EntityType.InvoiceLineGroupRawTestDataEntity, false) { }
		
		/// <summary>Creates a new InvoiceLineGroupRawTestDataEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new InvoiceLineGroupRawTestDataEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewInvoiceLineGroupRawTestDataUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty InvoiceStatusEntity objects.</summary>
	[Serializable]
	public partial class InvoiceStatusEntityFactory : EntityFactoryBase2<InvoiceStatusEntity> {
		/// <summary>CTor</summary>
		public InvoiceStatusEntityFactory() : base("InvoiceStatusEntity", PsychologicalServices.Data.EntityType.InvoiceStatusEntity, false) { }
		
		/// <summary>Creates a new InvoiceStatusEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new InvoiceStatusEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewInvoiceStatusUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty InvoiceStatusChangeEntity objects.</summary>
	[Serializable]
	public partial class InvoiceStatusChangeEntityFactory : EntityFactoryBase2<InvoiceStatusChangeEntity> {
		/// <summary>CTor</summary>
		public InvoiceStatusChangeEntityFactory() : base("InvoiceStatusChangeEntity", PsychologicalServices.Data.EntityType.InvoiceStatusChangeEntity, false) { }
		
		/// <summary>Creates a new InvoiceStatusChangeEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new InvoiceStatusChangeEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewInvoiceStatusChangeUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty InvoiceStatusPathsEntity objects.</summary>
	[Serializable]
	public partial class InvoiceStatusPathsEntityFactory : EntityFactoryBase2<InvoiceStatusPathsEntity> {
		/// <summary>CTor</summary>
		public InvoiceStatusPathsEntityFactory() : base("InvoiceStatusPathsEntity", PsychologicalServices.Data.EntityType.InvoiceStatusPathsEntity, false) { }
		
		/// <summary>Creates a new InvoiceStatusPathsEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new InvoiceStatusPathsEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewInvoiceStatusPathsUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty InvoiceTypeEntity objects.</summary>
	[Serializable]
	public partial class InvoiceTypeEntityFactory : EntityFactoryBase2<InvoiceTypeEntity> {
		/// <summary>CTor</summary>
		public InvoiceTypeEntityFactory() : base("InvoiceTypeEntity", PsychologicalServices.Data.EntityType.InvoiceTypeEntity, false) { }
		
		/// <summary>Creates a new InvoiceTypeEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new InvoiceTypeEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewInvoiceTypeUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty IssueInDisputeEntity objects.</summary>
	[Serializable]
	public partial class IssueInDisputeEntityFactory : EntityFactoryBase2<IssueInDisputeEntity> {
		/// <summary>CTor</summary>
		public IssueInDisputeEntityFactory() : base("IssueInDisputeEntity", PsychologicalServices.Data.EntityType.IssueInDisputeEntity, false) { }
		
		/// <summary>Creates a new IssueInDisputeEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new IssueInDisputeEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewIssueInDisputeUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty IssueInDisputeInvoiceAmountEntity objects.</summary>
	[Serializable]
	public partial class IssueInDisputeInvoiceAmountEntityFactory : EntityFactoryBase2<IssueInDisputeInvoiceAmountEntity> {
		/// <summary>CTor</summary>
		public IssueInDisputeInvoiceAmountEntityFactory() : base("IssueInDisputeInvoiceAmountEntity", PsychologicalServices.Data.EntityType.IssueInDisputeInvoiceAmountEntity, false) { }
		
		/// <summary>Creates a new IssueInDisputeInvoiceAmountEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new IssueInDisputeInvoiceAmountEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewIssueInDisputeInvoiceAmountUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty NoteEntity objects.</summary>
	[Serializable]
	public partial class NoteEntityFactory : EntityFactoryBase2<NoteEntity> {
		/// <summary>CTor</summary>
		public NoteEntityFactory() : base("NoteEntity", PsychologicalServices.Data.EntityType.NoteEntity, false) { }
		
		/// <summary>Creates a new NoteEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new NoteEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewNoteUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty PsychometristInvoiceAmountEntity objects.</summary>
	[Serializable]
	public partial class PsychometristInvoiceAmountEntityFactory : EntityFactoryBase2<PsychometristInvoiceAmountEntity> {
		/// <summary>CTor</summary>
		public PsychometristInvoiceAmountEntityFactory() : base("PsychometristInvoiceAmountEntity", PsychologicalServices.Data.EntityType.PsychometristInvoiceAmountEntity, false) { }
		
		/// <summary>Creates a new PsychometristInvoiceAmountEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new PsychometristInvoiceAmountEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewPsychometristInvoiceAmountUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty RawTestDataEntity objects.</summary>
	[Serializable]
	public partial class RawTestDataEntityFactory : EntityFactoryBase2<RawTestDataEntity> {
		/// <summary>CTor</summary>
		public RawTestDataEntityFactory() : base("RawTestDataEntity", PsychologicalServices.Data.EntityType.RawTestDataEntity, false) { }
		
		/// <summary>Creates a new RawTestDataEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new RawTestDataEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewRawTestDataUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty RawTestDataStatusEntity objects.</summary>
	[Serializable]
	public partial class RawTestDataStatusEntityFactory : EntityFactoryBase2<RawTestDataStatusEntity> {
		/// <summary>CTor</summary>
		public RawTestDataStatusEntityFactory() : base("RawTestDataStatusEntity", PsychologicalServices.Data.EntityType.RawTestDataStatusEntity, false) { }
		
		/// <summary>Creates a new RawTestDataStatusEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new RawTestDataStatusEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewRawTestDataStatusUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty ReferralSourceEntity objects.</summary>
	[Serializable]
	public partial class ReferralSourceEntityFactory : EntityFactoryBase2<ReferralSourceEntity> {
		/// <summary>CTor</summary>
		public ReferralSourceEntityFactory() : base("ReferralSourceEntity", PsychologicalServices.Data.EntityType.ReferralSourceEntity, false) { }
		
		/// <summary>Creates a new ReferralSourceEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new ReferralSourceEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewReferralSourceUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty ReferralSourceInvoiceConfigurationEntity objects.</summary>
	[Serializable]
	public partial class ReferralSourceInvoiceConfigurationEntityFactory : EntityFactoryBase2<ReferralSourceInvoiceConfigurationEntity> {
		/// <summary>CTor</summary>
		public ReferralSourceInvoiceConfigurationEntityFactory() : base("ReferralSourceInvoiceConfigurationEntity", PsychologicalServices.Data.EntityType.ReferralSourceInvoiceConfigurationEntity, false) { }
		
		/// <summary>Creates a new ReferralSourceInvoiceConfigurationEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new ReferralSourceInvoiceConfigurationEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewReferralSourceInvoiceConfigurationUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty ReferralSourceTypeEntity objects.</summary>
	[Serializable]
	public partial class ReferralSourceTypeEntityFactory : EntityFactoryBase2<ReferralSourceTypeEntity> {
		/// <summary>CTor</summary>
		public ReferralSourceTypeEntityFactory() : base("ReferralSourceTypeEntity", PsychologicalServices.Data.EntityType.ReferralSourceTypeEntity, false) { }
		
		/// <summary>Creates a new ReferralSourceTypeEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new ReferralSourceTypeEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewReferralSourceTypeUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty ReferralTypeEntity objects.</summary>
	[Serializable]
	public partial class ReferralTypeEntityFactory : EntityFactoryBase2<ReferralTypeEntity> {
		/// <summary>CTor</summary>
		public ReferralTypeEntityFactory() : base("ReferralTypeEntity", PsychologicalServices.Data.EntityType.ReferralTypeEntity, false) { }
		
		/// <summary>Creates a new ReferralTypeEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new ReferralTypeEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewReferralTypeUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty ReferralTypeIssueInDisputeEntity objects.</summary>
	[Serializable]
	public partial class ReferralTypeIssueInDisputeEntityFactory : EntityFactoryBase2<ReferralTypeIssueInDisputeEntity> {
		/// <summary>CTor</summary>
		public ReferralTypeIssueInDisputeEntityFactory() : base("ReferralTypeIssueInDisputeEntity", PsychologicalServices.Data.EntityType.ReferralTypeIssueInDisputeEntity, false) { }
		
		/// <summary>Creates a new ReferralTypeIssueInDisputeEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new ReferralTypeIssueInDisputeEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewReferralTypeIssueInDisputeUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty ReportStatusEntity objects.</summary>
	[Serializable]
	public partial class ReportStatusEntityFactory : EntityFactoryBase2<ReportStatusEntity> {
		/// <summary>CTor</summary>
		public ReportStatusEntityFactory() : base("ReportStatusEntity", PsychologicalServices.Data.EntityType.ReportStatusEntity, false) { }
		
		/// <summary>Creates a new ReportStatusEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new ReportStatusEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewReportStatusUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty ReportTypeEntity objects.</summary>
	[Serializable]
	public partial class ReportTypeEntityFactory : EntityFactoryBase2<ReportTypeEntity> {
		/// <summary>CTor</summary>
		public ReportTypeEntityFactory() : base("ReportTypeEntity", PsychologicalServices.Data.EntityType.ReportTypeEntity, false) { }
		
		/// <summary>Creates a new ReportTypeEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new ReportTypeEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewReportTypeUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty RightEntity objects.</summary>
	[Serializable]
	public partial class RightEntityFactory : EntityFactoryBase2<RightEntity> {
		/// <summary>CTor</summary>
		public RightEntityFactory() : base("RightEntity", PsychologicalServices.Data.EntityType.RightEntity, false) { }
		
		/// <summary>Creates a new RightEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new RightEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewRightUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty RoleEntity objects.</summary>
	[Serializable]
	public partial class RoleEntityFactory : EntityFactoryBase2<RoleEntity> {
		/// <summary>CTor</summary>
		public RoleEntityFactory() : base("RoleEntity", PsychologicalServices.Data.EntityType.RoleEntity, false) { }
		
		/// <summary>Creates a new RoleEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new RoleEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewRoleUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty RoleRightEntity objects.</summary>
	[Serializable]
	public partial class RoleRightEntityFactory : EntityFactoryBase2<RoleRightEntity> {
		/// <summary>CTor</summary>
		public RoleRightEntityFactory() : base("RoleRightEntity", PsychologicalServices.Data.EntityType.RoleRightEntity, false) { }
		
		/// <summary>Creates a new RoleRightEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new RoleRightEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewRoleRightUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty UserEntity objects.</summary>
	[Serializable]
	public partial class UserEntityFactory : EntityFactoryBase2<UserEntity> {
		/// <summary>CTor</summary>
		public UserEntityFactory() : base("UserEntity", PsychologicalServices.Data.EntityType.UserEntity, false) { }
		
		/// <summary>Creates a new UserEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new UserEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewUserUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty UserNoteEntity objects.</summary>
	[Serializable]
	public partial class UserNoteEntityFactory : EntityFactoryBase2<UserNoteEntity> {
		/// <summary>CTor</summary>
		public UserNoteEntityFactory() : base("UserNoteEntity", PsychologicalServices.Data.EntityType.UserNoteEntity, false) { }
		
		/// <summary>Creates a new UserNoteEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new UserNoteEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewUserNoteUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty UserRoleEntity objects.</summary>
	[Serializable]
	public partial class UserRoleEntityFactory : EntityFactoryBase2<UserRoleEntity> {
		/// <summary>CTor</summary>
		public UserRoleEntityFactory() : base("UserRoleEntity", PsychologicalServices.Data.EntityType.UserRoleEntity, false) { }
		
		/// <summary>Creates a new UserRoleEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new UserRoleEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewUserRoleUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty UserTravelFeeEntity objects.</summary>
	[Serializable]
	public partial class UserTravelFeeEntityFactory : EntityFactoryBase2<UserTravelFeeEntity> {
		/// <summary>CTor</summary>
		public UserTravelFeeEntityFactory() : base("UserTravelFeeEntity", PsychologicalServices.Data.EntityType.UserTravelFeeEntity, false) { }
		
		/// <summary>Creates a new UserTravelFeeEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new UserTravelFeeEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewUserTravelFeeUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty UserUnavailabilityEntity objects.</summary>
	[Serializable]
	public partial class UserUnavailabilityEntityFactory : EntityFactoryBase2<UserUnavailabilityEntity> {
		/// <summary>CTor</summary>
		public UserUnavailabilityEntityFactory() : base("UserUnavailabilityEntity", PsychologicalServices.Data.EntityType.UserUnavailabilityEntity, false) { }
		
		/// <summary>Creates a new UserUnavailabilityEntity instance but uses a special constructor which will set the Fields object of the new IEntity2 instance to the passed in fields object.</summary>
		/// <param name="fields">Populated IEntityFields2 object for the new IEntity2 to create</param>
		/// <returns>Fully created and populated (due to the IEntityFields2 object) IEntity2 object</returns>
		public override IEntity2 Create(IEntityFields2 fields) {
			IEntity2 toReturn = new UserUnavailabilityEntity(fields);
			// __LLBLGENPRO_USER_CODE_REGION_START CreateNewUserUnavailabilityUsingFields
			// __LLBLGENPRO_USER_CODE_REGION_END
			return toReturn;
		}
		#region Included Code

		#endregion
	}

	/// <summary>Factory to create new, empty Entity objects based on the entity type specified. Uses  entity specific factory objects</summary>
	[Serializable]
	public partial class GeneralEntityFactory
	{
		/// <summary>Creates a new, empty Entity object of the type specified</summary>
		/// <param name="entityTypeToCreate">The entity type to create.</param>
		/// <returns>A new, empty Entity object.</returns>
		public static IEntity2 Create(PsychologicalServices.Data.EntityType entityTypeToCreate)
		{
			IEntityFactory2 factoryToUse = null;
			switch(entityTypeToCreate)
			{
				case PsychologicalServices.Data.EntityType.AddressEntity:
					factoryToUse = new AddressEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.AddressAddressTypeEntity:
					factoryToUse = new AddressAddressTypeEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.AddressTypeEntity:
					factoryToUse = new AddressTypeEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.AppointmentEntity:
					factoryToUse = new AppointmentEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.AppointmentAttributeEntity:
					factoryToUse = new AppointmentAttributeEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.AppointmentSequenceEntity:
					factoryToUse = new AppointmentSequenceEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.AppointmentStatusEntity:
					factoryToUse = new AppointmentStatusEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.AppointmentStatusInvoiceRateEntity:
					factoryToUse = new AppointmentStatusInvoiceRateEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.ArbitrationEntity:
					factoryToUse = new ArbitrationEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.ArbitrationClaimEntity:
					factoryToUse = new ArbitrationClaimEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.ArbitrationStatusEntity:
					factoryToUse = new ArbitrationStatusEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.AssessmentEntity:
					factoryToUse = new AssessmentEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.AssessmentAttributeEntity:
					factoryToUse = new AssessmentAttributeEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.AssessmentClaimEntity:
					factoryToUse = new AssessmentClaimEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.AssessmentColorEntity:
					factoryToUse = new AssessmentColorEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.AssessmentMedRehabEntity:
					factoryToUse = new AssessmentMedRehabEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.AssessmentNoteEntity:
					factoryToUse = new AssessmentNoteEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.AssessmentReportEntity:
					factoryToUse = new AssessmentReportEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.AssessmentReportIssueInDisputeEntity:
					factoryToUse = new AssessmentReportIssueInDisputeEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.AssessmentTestingResultEntity:
					factoryToUse = new AssessmentTestingResultEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.AssessmentTypeEntity:
					factoryToUse = new AssessmentTypeEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.AssessmentTypeAttributeTypeEntity:
					factoryToUse = new AssessmentTypeAttributeTypeEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.AssessmentTypeInvoiceAmountEntity:
					factoryToUse = new AssessmentTypeInvoiceAmountEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.AssessmentTypeReportTypeEntity:
					factoryToUse = new AssessmentTypeReportTypeEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.AttributeEntity:
					factoryToUse = new AttributeEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.AttributeTypeEntity:
					factoryToUse = new AttributeTypeEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.CalendarNoteEntity:
					factoryToUse = new CalendarNoteEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.CityEntity:
					factoryToUse = new CityEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.ClaimEntity:
					factoryToUse = new ClaimEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.ClaimantEntity:
					factoryToUse = new ClaimantEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.ColorEntity:
					factoryToUse = new ColorEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.CompanyEntity:
					factoryToUse = new CompanyEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.CompanyAttributeEntity:
					factoryToUse = new CompanyAttributeEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.ConsultingAgreementEntity:
					factoryToUse = new ConsultingAgreementEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.ContactEntity:
					factoryToUse = new ContactEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.ContactTypeEntity:
					factoryToUse = new ContactTypeEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.CredibilityEntity:
					factoryToUse = new CredibilityEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.DiagnosisFoundResponseEntity:
					factoryToUse = new DiagnosisFoundResponseEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.DocumentEntity:
					factoryToUse = new DocumentEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.EmployerEntity:
					factoryToUse = new EmployerEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.EmployerTypeEntity:
					factoryToUse = new EmployerTypeEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.EventEntity:
					factoryToUse = new EventEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.GoseAccidentTimeframeEntity:
					factoryToUse = new GoseAccidentTimeframeEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.GoseFamilyAndFriendshipsDisruptionLevelEntity:
					factoryToUse = new GoseFamilyAndFriendshipsDisruptionLevelEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.GoseInterviewEntity:
					factoryToUse = new GoseInterviewEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.GoseRespondentTypeEntity:
					factoryToUse = new GoseRespondentTypeEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.GoseReturnToNormalLifeOutcomeFactorEntity:
					factoryToUse = new GoseReturnToNormalLifeOutcomeFactorEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.GoseSocialAndLeisureRestrictionExtentEntity:
					factoryToUse = new GoseSocialAndLeisureRestrictionExtentEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.GoseWorkRestrictionLevelEntity:
					factoryToUse = new GoseWorkRestrictionLevelEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.InvoiceEntity:
					factoryToUse = new InvoiceEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.InvoiceDocumentEntity:
					factoryToUse = new InvoiceDocumentEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.InvoiceDocumentSendLogEntity:
					factoryToUse = new InvoiceDocumentSendLogEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.InvoiceLineEntity:
					factoryToUse = new InvoiceLineEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.InvoiceLineGroupEntity:
					factoryToUse = new InvoiceLineGroupEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.InvoiceLineGroupAppointmentEntity:
					factoryToUse = new InvoiceLineGroupAppointmentEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.InvoiceLineGroupArbitrationEntity:
					factoryToUse = new InvoiceLineGroupArbitrationEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.InvoiceLineGroupConsultingAgreementEntity:
					factoryToUse = new InvoiceLineGroupConsultingAgreementEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.InvoiceLineGroupRawTestDataEntity:
					factoryToUse = new InvoiceLineGroupRawTestDataEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.InvoiceStatusEntity:
					factoryToUse = new InvoiceStatusEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.InvoiceStatusChangeEntity:
					factoryToUse = new InvoiceStatusChangeEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.InvoiceStatusPathsEntity:
					factoryToUse = new InvoiceStatusPathsEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.InvoiceTypeEntity:
					factoryToUse = new InvoiceTypeEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.IssueInDisputeEntity:
					factoryToUse = new IssueInDisputeEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.IssueInDisputeInvoiceAmountEntity:
					factoryToUse = new IssueInDisputeInvoiceAmountEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.NoteEntity:
					factoryToUse = new NoteEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.PsychometristInvoiceAmountEntity:
					factoryToUse = new PsychometristInvoiceAmountEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.RawTestDataEntity:
					factoryToUse = new RawTestDataEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.RawTestDataStatusEntity:
					factoryToUse = new RawTestDataStatusEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.ReferralSourceEntity:
					factoryToUse = new ReferralSourceEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.ReferralSourceInvoiceConfigurationEntity:
					factoryToUse = new ReferralSourceInvoiceConfigurationEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.ReferralSourceTypeEntity:
					factoryToUse = new ReferralSourceTypeEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.ReferralTypeEntity:
					factoryToUse = new ReferralTypeEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.ReferralTypeIssueInDisputeEntity:
					factoryToUse = new ReferralTypeIssueInDisputeEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.ReportStatusEntity:
					factoryToUse = new ReportStatusEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.ReportTypeEntity:
					factoryToUse = new ReportTypeEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.RightEntity:
					factoryToUse = new RightEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.RoleEntity:
					factoryToUse = new RoleEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.RoleRightEntity:
					factoryToUse = new RoleRightEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.UserEntity:
					factoryToUse = new UserEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.UserNoteEntity:
					factoryToUse = new UserNoteEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.UserRoleEntity:
					factoryToUse = new UserRoleEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.UserTravelFeeEntity:
					factoryToUse = new UserTravelFeeEntityFactory();
					break;
				case PsychologicalServices.Data.EntityType.UserUnavailabilityEntity:
					factoryToUse = new UserUnavailabilityEntityFactory();
					break;
			}
			IEntity2 toReturn = null;
			if(factoryToUse != null)
			{
				toReturn = factoryToUse.Create();
			}
			return toReturn;
		}		
	}
		
	/// <summary>Class which is used to obtain the entity factory based on the .NET type of the entity. </summary>
	[Serializable]
	public static class EntityFactoryFactory
	{
		private static Dictionary<Type, IEntityFactory2> _factoryPerType = new Dictionary<Type, IEntityFactory2>();

		/// <summary>Initializes the <see cref="EntityFactoryFactory"/> class.</summary>
		static EntityFactoryFactory()
		{
			Array entityTypeValues = Enum.GetValues(typeof(PsychologicalServices.Data.EntityType));
			foreach(int entityTypeValue in entityTypeValues)
			{
				IEntity2 dummy = GeneralEntityFactory.Create((PsychologicalServices.Data.EntityType)entityTypeValue);
				_factoryPerType.Add(dummy.GetType(), dummy.GetEntityFactory());
			}
		}

		/// <summary>Gets the factory of the entity with the .NET type specified</summary>
		/// <param name="typeOfEntity">The type of entity.</param>
		/// <returns>factory to use or null if not found</returns>
		public static IEntityFactory2 GetFactory(Type typeOfEntity)
		{
			IEntityFactory2 toReturn = null;
			_factoryPerType.TryGetValue(typeOfEntity, out toReturn);
			return toReturn;
		}

		/// <summary>Gets the factory of the entity with the PsychologicalServices.Data.EntityType specified</summary>
		/// <param name="typeOfEntity">The type of entity.</param>
		/// <returns>factory to use or null if not found</returns>
		public static IEntityFactory2 GetFactory(PsychologicalServices.Data.EntityType typeOfEntity)
		{
			return GetFactory(GeneralEntityFactory.Create(typeOfEntity).GetType());
		}
	}
		
	/// <summary>Element creator for creating project elements from somewhere else, like inside Linq providers.</summary>
	public class ElementCreator : ElementCreatorBase, IElementCreator2
	{
		/// <summary>Gets the factory of the Entity type with the PsychologicalServices.Data.EntityType value passed in</summary>
		/// <param name="entityTypeValue">The entity type value.</param>
		/// <returns>the entity factory of the entity type or null if not found</returns>
		public IEntityFactory2 GetFactory(int entityTypeValue)
		{
			return (IEntityFactory2)this.GetFactoryImpl(entityTypeValue);
		}
		
		/// <summary>Gets the factory of the Entity type with the .NET type passed in</summary>
		/// <param name="typeOfEntity">The type of entity.</param>
		/// <returns>the entity factory of the entity type or null if not found</returns>
		public IEntityFactory2 GetFactory(Type typeOfEntity)
		{
			return (IEntityFactory2)this.GetFactoryImpl(typeOfEntity);
		}

		/// <summary>Creates a new resultset fields object with the number of field slots reserved as specified</summary>
		/// <param name="numberOfFields">The number of fields.</param>
		/// <returns>ready to use resultsetfields object</returns>
		public IEntityFields2 CreateResultsetFields(int numberOfFields)
		{
			return new ResultsetFields(numberOfFields);
		}
		
		/// <summary>Obtains the inheritance info provider instance from the singleton </summary>
		/// <returns>The singleton instance of the inheritance info provider</returns>
		public override IInheritanceInfoProvider ObtainInheritanceInfoProviderInstance()
		{
			return InheritanceInfoProviderSingleton.GetInstance();
		}


		/// <summary>Creates a new dynamic relation instance</summary>
		/// <param name="leftOperand">The left operand.</param>
		/// <returns>ready to use dynamic relation</returns>
		public override IDynamicRelation CreateDynamicRelation(DerivedTableDefinition leftOperand)
		{
			return new DynamicRelation(leftOperand);
		}

		/// <summary>Creates a new dynamic relation instance</summary>
		/// <param name="leftOperand">The left operand.</param>
		/// <param name="joinType">Type of the join. If None is specified, Inner is assumed.</param>
		/// <param name="rightOperand">The right operand.</param>
		/// <param name="onClause">The on clause for the join.</param>
		/// <returns>ready to use dynamic relation</returns>
		public override IDynamicRelation CreateDynamicRelation(DerivedTableDefinition leftOperand, JoinHint joinType, DerivedTableDefinition rightOperand, IPredicate onClause)
		{
			return new DynamicRelation(leftOperand, joinType, rightOperand, onClause);
		}

		/// <summary>Creates a new dynamic relation instance</summary>
		/// <param name="leftOperand">The left operand.</param>
		/// <param name="joinType">Type of the join. If None is specified, Inner is assumed.</param>
		/// <param name="rightOperand">The right operand.</param>
		/// <param name="aliasLeftOperand">The alias of the left operand. If you don't want to / need to alias the right operand (only alias if you have to), specify string.Empty.</param>
		/// <param name="onClause">The on clause for the join.</param>
		/// <returns>ready to use dynamic relation</returns>
		public override IDynamicRelation CreateDynamicRelation(IEntityFieldCore leftOperand, JoinHint joinType, DerivedTableDefinition rightOperand, string aliasLeftOperand, IPredicate onClause)
		{
			return new DynamicRelation(leftOperand, joinType, rightOperand, aliasLeftOperand, onClause);
		}


		/// <summary>Creates a new dynamic relation instance</summary>
		/// <param name="leftOperand">The left operand.</param>
		/// <param name="joinType">Type of the join. If None is specified, Inner is assumed.</param>
		/// <param name="rightOperandEntityName">Name of the entity, which is used as the right operand.</param>
		/// <param name="aliasRightOperand">The alias of the right operand. If you don't want to / need to alias the right operand (only alias if you have to), specify string.Empty.</param>
		/// <param name="onClause">The on clause for the join.</param>
		/// <returns>ready to use dynamic relation</returns>
		public override IDynamicRelation CreateDynamicRelation(DerivedTableDefinition leftOperand, JoinHint joinType, string rightOperandEntityName, string aliasRightOperand, IPredicate onClause)
		{
			return new DynamicRelation(leftOperand, joinType, (PsychologicalServices.Data.EntityType)Enum.Parse(typeof(PsychologicalServices.Data.EntityType), rightOperandEntityName, false), aliasRightOperand, onClause);
		}

		/// <summary>Creates a new dynamic relation instance</summary>
		/// <param name="leftOperandEntityName">Name of the entity which is used as the left operand.</param>
		/// <param name="joinType">Type of the join. If None is specified, Inner is assumed.</param>
		/// <param name="rightOperandEntityName">Name of the entity, which is used as the right operand.</param>
		/// <param name="aliasLeftOperand">The alias of the left operand. If you don't want to / need to alias the right operand (only alias if you have to), specify string.Empty.</param>
		/// <param name="aliasRightOperand">The alias of the right operand. If you don't want to / need to alias the right operand (only alias if you have to), specify string.Empty.</param>
		/// <param name="onClause">The on clause for the join.</param>
		/// <returns>ready to use dynamic relation</returns>
		public override IDynamicRelation CreateDynamicRelation(string leftOperandEntityName, JoinHint joinType, string rightOperandEntityName, string aliasLeftOperand, string aliasRightOperand, IPredicate onClause)
		{
			return new DynamicRelation((PsychologicalServices.Data.EntityType)Enum.Parse(typeof(PsychologicalServices.Data.EntityType), leftOperandEntityName, false), joinType, (PsychologicalServices.Data.EntityType)Enum.Parse(typeof(PsychologicalServices.Data.EntityType), rightOperandEntityName, false), aliasLeftOperand, aliasRightOperand, onClause);
		}
		
		/// <summary>Creates a new dynamic relation instance</summary>
		/// <param name="leftOperand">The left operand.</param>
		/// <param name="joinType">Type of the join. If None is specified, Inner is assumed.</param>
		/// <param name="rightOperandEntityName">Name of the entity, which is used as the right operand.</param>
		/// <param name="aliasLeftOperand">The alias of the left operand. If you don't want to / need to alias the right operand (only alias if you have to), specify string.Empty.</param>
		/// <param name="aliasRightOperand">The alias of the right operand. If you don't want to / need to alias the right operand (only alias if you have to), specify string.Empty.</param>
		/// <param name="onClause">The on clause for the join.</param>
		/// <returns>ready to use dynamic relation</returns>
		public override IDynamicRelation CreateDynamicRelation(IEntityFieldCore leftOperand, JoinHint joinType, string rightOperandEntityName, string aliasLeftOperand, string aliasRightOperand, IPredicate onClause)
		{
			return new DynamicRelation(leftOperand, joinType, (PsychologicalServices.Data.EntityType)Enum.Parse(typeof(PsychologicalServices.Data.EntityType), rightOperandEntityName, false), aliasLeftOperand, aliasRightOperand, onClause);
		}
		
		/// <summary>Implementation of the routine which gets the factory of the Entity type with the PsychologicalServices.Data.EntityType value passed in</summary>
		/// <param name="entityTypeValue">The entity type value.</param>
		/// <returns>the entity factory of the entity type or null if not found</returns>
		protected override IEntityFactoryCore GetFactoryImpl(int entityTypeValue)
		{
			return EntityFactoryFactory.GetFactory((PsychologicalServices.Data.EntityType)entityTypeValue);
		}

		/// <summary>Implementation of the routine which gets the factory of the Entity type with the .NET type passed in</summary>
		/// <param name="typeOfEntity">The type of entity.</param>
		/// <returns>the entity factory of the entity type or null if not found</returns>
		protected override IEntityFactoryCore GetFactoryImpl(Type typeOfEntity)
		{
			return EntityFactoryFactory.GetFactory(typeOfEntity);
		}

	}
}
